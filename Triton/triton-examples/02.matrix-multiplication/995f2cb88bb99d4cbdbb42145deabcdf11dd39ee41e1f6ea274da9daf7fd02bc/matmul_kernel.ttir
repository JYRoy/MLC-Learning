#loc = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0)
module {
  tt.func public @matmul_kernel(%arg0: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg1: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":260:0)) attributes {noinline = false} {
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<32> : tensor<32x32xi32> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<128x32xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<32x32xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c127_i32 : i32 loc(#loc57)
    %2 = arith.divsi %1, %c128_i32 : i32 loc(#loc58)
    %3 = arith.addi %arg4, %c31_i32 : i32 loc(#loc59)
    %4 = arith.divsi %3, %c32_i32 : i32 loc(#loc60)
    %5 = arith.muli %4, %c8_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %5 : i32 loc(#loc8)
    %7 = arith.muli %6, %c8_i32 : i32 loc(#loc9)
    %8 = arith.subi %2, %7 : i32 loc(#loc10)
    %9 = arith.minsi %8, %c8_i32 : i32 loc(#loc11)
    %10 = arith.remsi %0, %5 : i32 loc(#loc12)
    %11 = arith.remsi %10, %9 : i32 loc(#loc13)
    %12 = arith.addi %7, %11 : i32 loc(#loc14)
    %13 = arith.divsi %10, %9 : i32 loc(#loc15)
    %14 = arith.muli %12, %c128_i32 : i32 loc(#loc16)
    %15 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc17)
    %16 = tt.splat %14 : i32 -> tensor<128xi32> loc(#loc18)
    %17 = arith.addi %16, %15 : tensor<128xi32> loc(#loc18)
    %18 = tt.splat %arg3 : i32 -> tensor<128xi32> loc(#loc19)
    %19 = arith.remsi %17, %18 : tensor<128xi32> loc(#loc19)
    %20 = arith.muli %13, %c32_i32 : i32 loc(#loc20)
    %21 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc21)
    %22 = tt.splat %20 : i32 -> tensor<32xi32> loc(#loc22)
    %23 = arith.addi %22, %21 : tensor<32xi32> loc(#loc22)
    %24 = tt.splat %arg4 : i32 -> tensor<32xi32> loc(#loc23)
    %25 = arith.remsi %23, %24 : tensor<32xi32> loc(#loc23)
    %26 = tt.expand_dims %19 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc24)
    %27 = tt.splat %arg6 : i32 -> tensor<128x1xi32> loc(#loc25)
    %28 = arith.muli %26, %27 : tensor<128x1xi32> loc(#loc25)
    %29 = tt.expand_dims %21 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc26)
    %30 = tt.broadcast %28 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc27)
    %31 = tt.broadcast %29 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc27)
    %32 = arith.addi %30, %31 : tensor<128x32xi32> loc(#loc27)
    %33 = tt.splat %arg0 : !tt.ptr<f8E5M2> -> tensor<128x32x!tt.ptr<f8E5M2>> loc(#loc28)
    %34 = tt.addptr %33, %32 : tensor<128x32x!tt.ptr<f8E5M2>>, tensor<128x32xi32> loc(#loc28)
    %35 = tt.expand_dims %21 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc29)
    %36 = tt.expand_dims %25 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc30)
    %37 = tt.splat %arg7 : i32 -> tensor<1x32xi32> loc(#loc31)
    %38 = arith.muli %36, %37 : tensor<1x32xi32> loc(#loc31)
    %39 = tt.broadcast %35 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc32)
    %40 = tt.broadcast %38 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc32)
    %41 = arith.addi %39, %40 : tensor<32x32xi32> loc(#loc32)
    %42 = tt.splat %arg1 : !tt.ptr<f8E5M2> -> tensor<32x32x!tt.ptr<f8E5M2>> loc(#loc33)
    %43 = tt.addptr %42, %41 : tensor<32x32x!tt.ptr<f8E5M2>>, tensor<32x32xi32> loc(#loc33)
    %44 = arith.addi %arg5, %c31_i32 : i32 loc(#loc61)
    %45 = arith.divsi %44, %c32_i32 : i32 loc(#loc62)
    %46 = tt.fp_to_fp %cst_2, rounding = rtne : tensor<128x32xf32> -> tensor<128x32xf8E5M2> loc(#loc35)
    %47 = tt.fp_to_fp %cst_1, rounding = rtne : tensor<32x32xf32> -> tensor<32x32xf8E5M2> loc(#loc36)
    %48:3 = scf.for %arg9 = %c0_i32 to %45 step %c1_i32 iter_args(%arg10 = %cst_2, %arg11 = %34, %arg12 = %43) -> (tensor<128x32xf32>, tensor<128x32x!tt.ptr<f8E5M2>>, tensor<32x32x!tt.ptr<f8E5M2>>)  : i32 {
      %66 = arith.muli %arg9, %c32_i32 : i32 loc(#loc38)
      %67 = arith.subi %arg5, %66 : i32 loc(#loc39)
      %68 = tt.splat %67 : i32 -> tensor<1x32xi32> loc(#loc40)
      %69 = arith.cmpi slt, %29, %68 : tensor<1x32xi32> loc(#loc40)
      %70 = tt.broadcast %69 : tensor<1x32xi1> -> tensor<128x32xi1> loc(#loc35)
      %71 = tt.load %arg11, %70, %46 : tensor<128x32x!tt.ptr<f8E5M2>> loc(#loc35)
      %72 = tt.splat %67 : i32 -> tensor<32x1xi32> loc(#loc41)
      %73 = arith.cmpi slt, %35, %72 : tensor<32x1xi32> loc(#loc41)
      %74 = tt.broadcast %73 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc36)
      %75 = tt.load %arg12, %74, %47 : tensor<32x32x!tt.ptr<f8E5M2>> loc(#loc36)
      %76 = tt.dot %71, %75, %arg10, inputPrecision = tf32 : tensor<128x32xf8E5M2> * tensor<32x32xf8E5M2> -> tensor<128x32xf32> loc(#loc42)
      %77 = tt.addptr %arg11, %cst_0 : tensor<128x32x!tt.ptr<f8E5M2>>, tensor<128x32xi32> loc(#loc43)
      %78 = tt.addptr %arg12, %cst : tensor<32x32x!tt.ptr<f8E5M2>>, tensor<32x32xi32> loc(#loc44)
      scf.yield %76, %77, %78 : tensor<128x32xf32>, tensor<128x32x!tt.ptr<f8E5M2>>, tensor<32x32x!tt.ptr<f8E5M2>> loc(#loc45)
    } loc(#loc37)
    %49 = arith.truncf %48#0 : tensor<128x32xf32> to tensor<128x32xf16> loc(#loc46)
    %50 = tt.expand_dims %17 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc47)
    %51 = tt.splat %arg8 : i32 -> tensor<128x1xi32> loc(#loc48)
    %52 = arith.muli %51, %50 : tensor<128x1xi32> loc(#loc48)
    %53 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<128x1x!tt.ptr<f16>> loc(#loc49)
    %54 = tt.addptr %53, %52 : tensor<128x1x!tt.ptr<f16>>, tensor<128x1xi32> loc(#loc49)
    %55 = tt.expand_dims %23 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc50)
    %56 = tt.broadcast %54 : tensor<128x1x!tt.ptr<f16>> -> tensor<128x32x!tt.ptr<f16>> loc(#loc51)
    %57 = tt.broadcast %55 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc51)
    %58 = tt.addptr %56, %57 : tensor<128x32x!tt.ptr<f16>>, tensor<128x32xi32> loc(#loc51)
    %59 = tt.splat %arg3 : i32 -> tensor<128x1xi32> loc(#loc52)
    %60 = arith.cmpi slt, %50, %59 : tensor<128x1xi32> loc(#loc52)
    %61 = tt.splat %arg4 : i32 -> tensor<1x32xi32> loc(#loc53)
    %62 = arith.cmpi slt, %55, %61 : tensor<1x32xi32> loc(#loc53)
    %63 = tt.broadcast %60 : tensor<128x1xi1> -> tensor<128x32xi1> loc(#loc54)
    %64 = tt.broadcast %62 : tensor<1x32xi1> -> tensor<128x32xi1> loc(#loc54)
    %65 = arith.andi %63, %64 : tensor<128x32xi1> loc(#loc54)
    tt.store %58, %49, %65 : tensor<128x32x!tt.ptr<f16>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":292:24)
#loc3 = loc("/data_ssd1/zjy_home/frameworks/cuda/triton/python/triton/language/standard.py":44:22)
#loc4 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":293:27)
#loc5 = loc("/data_ssd1/zjy_home/frameworks/cuda/triton/python/triton/language/standard.py":44:28)
#loc6 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":294:27)
#loc7 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":295:38)
#loc8 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":296:22)
#loc9 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":297:29)
#loc10 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":299:20)
#loc11 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":299:33)
#loc12 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":302:15)
#loc13 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":302:35)
#loc14 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":302:8)
#loc15 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":304:40)
#loc16 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":313:23)
#loc17 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":313:51)
#loc18 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":313:38)
#loc19 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":313:68)
#loc20 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":314:23)
#loc21 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":314:51)
#loc22 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":314:38)
#loc23 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":314:68)
#loc24 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":316:30)
#loc25 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":316:41)
#loc26 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":316:60)
#loc27 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":316:53)
#loc28 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":316:22)
#loc29 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":318:29)
#loc30 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":318:60)
#loc31 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":318:71)
#loc32 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":318:52)
#loc33 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":318:22)
#loc34 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":327:33)
#loc35 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":330:20)
#loc36 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":331:20)
#loc37 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":327:22)
#loc38 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":330:59)
#loc39 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":330:55)
#loc40 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":330:51)
#loc41 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":331:51)
#loc42 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":333:35)
#loc43 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":335:18)
#loc44 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":336:18)
#loc45 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":336:8)
#loc46 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":341:23)
#loc47 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":347:41)
#loc48 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":347:33)
#loc49 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":347:21)
#loc50 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":347:72)
#loc51 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":347:52)
#loc52 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":348:33)
#loc53 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":348:58)
#loc54 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":348:39)
#loc55 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":349:21)
#loc56 = loc("/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py":349:4)
#loc57 = loc(callsite(#loc3 at #loc4))
#loc58 = loc(callsite(#loc5 at #loc4))
#loc59 = loc(callsite(#loc3 at #loc6))
#loc60 = loc(callsite(#loc5 at #loc6))
#loc61 = loc(callsite(#loc3 at #loc34))
#loc62 = loc(callsite(#loc5 at #loc34))
