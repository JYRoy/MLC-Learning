//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	matmul_kernel
.extern .shared .align 16 .b8 global_smem[];

.visible .entry matmul_kernel(
	.param .u64 matmul_kernel_param_0,
	.param .u64 matmul_kernel_param_1,
	.param .u64 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u32 matmul_kernel_param_8
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<164>;
	.reg .b16 	%rs<129>;
	.reg .b32 	%r<2910>;
	.reg .f32 	%f<2434>;
	.reg .b64 	%rd<210>;
	.loc	1 260 0
$L__func_begin0:
	.loc	1 260 0

	ld.param.u32 	%r307, [matmul_kernel_param_8];
	ld.param.u32 	%r306, [matmul_kernel_param_7];
	ld.param.u32 	%r305, [matmul_kernel_param_5];
	ld.param.u32 	%r304, [matmul_kernel_param_4];
	ld.param.u32 	%r303, [matmul_kernel_param_3];
	ld.param.u64 	%rd52, [matmul_kernel_param_2];
	ld.param.u64 	%rd51, [matmul_kernel_param_1];
	ld.param.u64 	%rd208, [matmul_kernel_param_0];
$L__tmp0:
	.loc	1 292 24
	// begin inline asm
	mov.u32 %r308, %ctaid.x;
	// end inline asm
$L__tmp1:
	.loc	2 44 22
	add.s32 	%r509, %r303, 127;
	.loc	2 44 28
	shr.s32 	%r510, %r509, 31;
	shr.u32 	%r511, %r510, 25;
	add.s32 	%r512, %r509, %r511;
	shr.s32 	%r513, %r512, 7;
$L__tmp2:
	.loc	2 44 22
	add.s32 	%r514, %r304, 255;
	.loc	2 44 28
	shr.s32 	%r515, %r514, 31;
	shr.u32 	%r516, %r515, 24;
	add.s32 	%r517, %r514, %r516;
	shr.s32 	%r518, %r517, 8;
$L__tmp3:
	.loc	1 295 38
	shl.b32 	%r520, %r518, 3;
	ld.param.u32 	%r521, [matmul_kernel_param_6];
	.loc	1 296 22
	div.s32 	%r522, %r308, %r520;
	.loc	1 297 29
	shl.b32 	%r523, %r522, 3;
	.loc	1 299 20
	sub.s32 	%r524, %r513, %r523;
	.loc	1 299 33
	min.s32 	%r526, %r524, 8;
	mul.lo.s32 	%r527, %r522, %r520;
	sub.s32 	%r528, %r308, %r527;
	.loc	1 304 40
	div.s32 	%r529, %r528, %r526;
	mul.lo.s32 	%r530, %r529, %r526;
	sub.s32 	%r531, %r528, %r530;
	.loc	1 302 8
	add.s32 	%r532, %r531, %r523;
	.loc	1 313 23
	shl.b32 	%r1, %r532, 7;
	.loc	1 313 51
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 31;
	bfe.u32 	%r533, %r2, 4, 4;
	or.b32  	%r534, %r533, 16;
	or.b32  	%r535, %r533, 32;
	or.b32  	%r536, %r533, 48;
	or.b32  	%r537, %r533, 64;
	or.b32  	%r538, %r533, 80;
	or.b32  	%r539, %r533, 96;
	or.b32  	%r540, %r533, 112;
	bfe.u32 	%r4, %r2, 5, 3;
	or.b32  	%r5, %r4, 8;
	or.b32  	%r6, %r4, 16;
	or.b32  	%r7, %r4, 24;
	or.b32  	%r8, %r4, 32;
	or.b32  	%r9, %r4, 40;
	or.b32  	%r10, %r4, 48;
	or.b32  	%r11, %r4, 56;
	or.b32  	%r12, %r4, 64;
	or.b32  	%r13, %r4, 72;
	or.b32  	%r14, %r4, 80;
	or.b32  	%r15, %r4, 88;
	or.b32  	%r16, %r4, 96;
	or.b32  	%r17, %r4, 104;
	or.b32  	%r18, %r4, 112;
	or.b32  	%r19, %r4, 120;
	.loc	1 313 38
	or.b32  	%r541, %r1, %r533;
	or.b32  	%r542, %r1, %r534;
	or.b32  	%r543, %r1, %r535;
	or.b32  	%r544, %r1, %r536;
	or.b32  	%r545, %r1, %r537;
	or.b32  	%r546, %r1, %r538;
	or.b32  	%r547, %r1, %r539;
	or.b32  	%r548, %r1, %r540;
	.loc	1 313 68
	rem.s32 	%r549, %r541, %r303;
	rem.s32 	%r550, %r542, %r303;
	rem.s32 	%r551, %r543, %r303;
	rem.s32 	%r552, %r544, %r303;
	rem.s32 	%r553, %r545, %r303;
	rem.s32 	%r554, %r546, %r303;
	rem.s32 	%r555, %r547, %r303;
	rem.s32 	%r556, %r548, %r303;
	.loc	1 314 23
	shl.b32 	%r557, %r529, 8;
	.loc	1 314 51
	shl.b32 	%r558, %r2, 3;
	and.b32  	%r20, %r558, 120;
	and.b32  	%r559, %r558, 248;
	.loc	1 314 38
	or.b32  	%r21, %r557, %r559;
	.loc	1 314 68
	rem.s32 	%r22, %r21, %r304;
	.loc	1 316 53
	mad.lo.s32 	%r560, %r549, %r521, %r20;
	mad.lo.s32 	%r561, %r550, %r521, %r20;
	mad.lo.s32 	%r562, %r551, %r521, %r20;
	mad.lo.s32 	%r563, %r552, %r521, %r20;
	mad.lo.s32 	%r564, %r553, %r521, %r20;
	mad.lo.s32 	%r565, %r554, %r521, %r20;
	mad.lo.s32 	%r566, %r555, %r521, %r20;
	mad.lo.s32 	%r567, %r556, %r521, %r20;
	.loc	1 316 22
	mul.wide.s32 	%rd101, %r560, 2;
	add.s64 	%rd53, %rd208, %rd101;
	mul.wide.s32 	%rd102, %r561, 2;
	add.s64 	%rd54, %rd208, %rd102;
	mul.wide.s32 	%rd103, %r562, 2;
	add.s64 	%rd55, %rd208, %rd103;
	mul.wide.s32 	%rd104, %r563, 2;
	add.s64 	%rd56, %rd208, %rd104;
	mul.wide.s32 	%rd105, %r564, 2;
	add.s64 	%rd57, %rd208, %rd105;
	mul.wide.s32 	%rd106, %r565, 2;
	add.s64 	%rd58, %rd208, %rd106;
	mul.wide.s32 	%rd107, %r566, 2;
	add.s64 	%rd59, %rd208, %rd107;
	mul.wide.s32 	%rd108, %r567, 2;
	add.s64 	%rd60, %rd208, %rd108;
	.loc	1 318 40
	shl.b32 	%r568, %r306, 3;
	.loc	1 318 52
	mad.lo.s32 	%r569, %r4, %r306, %r22;
	add.s32 	%r570, %r569, %r568;
	add.s32 	%r571, %r570, %r568;
	add.s32 	%r572, %r571, %r568;
	add.s32 	%r573, %r572, %r568;
	add.s32 	%r574, %r573, %r568;
	add.s32 	%r575, %r574, %r568;
	add.s32 	%r576, %r575, %r568;
	add.s32 	%r577, %r576, %r568;
	add.s32 	%r578, %r577, %r568;
	add.s32 	%r579, %r578, %r568;
	add.s32 	%r580, %r579, %r568;
	add.s32 	%r581, %r580, %r568;
	add.s32 	%r582, %r581, %r568;
	add.s32 	%r583, %r582, %r568;
	add.s32 	%r584, %r583, %r568;
	.loc	1 318 22
	mul.wide.s32 	%rd109, %r569, 2;
	add.s64 	%rd61, %rd51, %rd109;
	mul.wide.s32 	%rd110, %r570, 2;
	add.s64 	%rd62, %rd51, %rd110;
	mul.wide.s32 	%rd111, %r571, 2;
	add.s64 	%rd63, %rd51, %rd111;
	mul.wide.s32 	%rd112, %r572, 2;
	add.s64 	%rd64, %rd51, %rd112;
	mul.wide.s32 	%rd113, %r573, 2;
	add.s64 	%rd65, %rd51, %rd113;
	mul.wide.s32 	%rd114, %r574, 2;
	add.s64 	%rd66, %rd51, %rd114;
	mul.wide.s32 	%rd115, %r575, 2;
	add.s64 	%rd67, %rd51, %rd115;
	mul.wide.s32 	%rd116, %r576, 2;
	add.s64 	%rd68, %rd51, %rd116;
	mul.wide.s32 	%rd117, %r577, 2;
	add.s64 	%rd69, %rd51, %rd117;
	mul.wide.s32 	%rd118, %r578, 2;
	add.s64 	%rd70, %rd51, %rd118;
	mul.wide.s32 	%rd119, %r579, 2;
	add.s64 	%rd71, %rd51, %rd119;
	mul.wide.s32 	%rd120, %r580, 2;
	add.s64 	%rd72, %rd51, %rd120;
	mul.wide.s32 	%rd121, %r581, 2;
	add.s64 	%rd73, %rd51, %rd121;
	mul.wide.s32 	%rd122, %r582, 2;
	add.s64 	%rd74, %rd51, %rd122;
	mul.wide.s32 	%rd123, %r583, 2;
	add.s64 	%rd75, %rd51, %rd123;
	mul.wide.s32 	%rd124, %r584, 2;
	add.s64 	%rd76, %rd51, %rd124;
$L__tmp4:
	.loc	2 44 22
	add.s32 	%r585, %r305, 127;
$L__tmp5:
	.loc	1 336 33
	shl.b32 	%r589, %r306, 7;
	.loc	1 327 22
	setp.lt.s32 	%p49, %r585, 128;
	setp.gt.s32 	%p50, %r585, 127;
	.loc	1 330 51
	setp.lt.s32 	%p51, %r20, %r305;
	.loc	1 330 20
	shl.b32 	%r590, %r533, 7;
	shr.u32 	%r591, %r2, 1;
	and.b32  	%r592, %r591, 56;
	xor.b32  	%r593, %r20, %r592;
	or.b32  	%r24, %r590, %r593;
	shl.b32 	%r594, %r24, 1;
	mov.u32 	%r595, global_smem;
	add.s32 	%r309, %r595, %r594;
	shl.b32 	%r596, %r534, 7;
	or.b32  	%r25, %r596, %r593;
	shl.b32 	%r597, %r25, 1;
	add.s32 	%r311, %r595, %r597;
	shl.b32 	%r598, %r535, 7;
	or.b32  	%r26, %r598, %r593;
	shl.b32 	%r599, %r26, 1;
	add.s32 	%r313, %r595, %r599;
	shl.b32 	%r600, %r536, 7;
	or.b32  	%r27, %r600, %r593;
	shl.b32 	%r601, %r27, 1;
	add.s32 	%r315, %r595, %r601;
	shl.b32 	%r602, %r537, 7;
	or.b32  	%r28, %r602, %r593;
	shl.b32 	%r603, %r28, 1;
	add.s32 	%r317, %r595, %r603;
	shl.b32 	%r604, %r538, 7;
	or.b32  	%r29, %r604, %r593;
	shl.b32 	%r605, %r29, 1;
	add.s32 	%r319, %r595, %r605;
	shl.b32 	%r606, %r539, 7;
	or.b32  	%r30, %r606, %r593;
	shl.b32 	%r607, %r30, 1;
	add.s32 	%r321, %r595, %r607;
	shl.b32 	%r608, %r540, 7;
	or.b32  	%r31, %r608, %r593;
	shl.b32 	%r609, %r31, 1;
	add.s32 	%r323, %r595, %r609;
	selp.b32 	%r610, 16, 0, %p50;
	selp.b32 	%r312, %r610, 0, %p51;
	mov.pred 	%p1, -1;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r309 + 0 ], [ %rd53 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r311 + 0 ], [ %rd54 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r313 + 0 ], [ %rd55 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r315 + 0 ], [ %rd56 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r317 + 0 ], [ %rd57 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r319 + 0 ], [ %rd58 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r321 + 0 ], [ %rd59 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r323 + 0 ], [ %rd60 + 0 ], 0x10, %r312;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 331 51
	setp.lt.s32 	%p52, %r4, %r305;
	setp.lt.s32 	%p53, %r5, %r305;
	setp.lt.s32 	%p54, %r6, %r305;
	setp.lt.s32 	%p55, %r7, %r305;
	setp.lt.s32 	%p56, %r8, %r305;
	setp.lt.s32 	%p57, %r9, %r305;
	setp.lt.s32 	%p58, %r10, %r305;
	setp.lt.s32 	%p59, %r11, %r305;
	setp.lt.s32 	%p60, %r12, %r305;
	setp.lt.s32 	%p61, %r13, %r305;
	setp.lt.s32 	%p62, %r14, %r305;
	setp.lt.s32 	%p63, %r15, %r305;
	setp.lt.s32 	%p64, %r16, %r305;
	setp.lt.s32 	%p65, %r17, %r305;
	setp.lt.s32 	%p66, %r18, %r305;
	setp.lt.s32 	%p67, %r19, %r305;
	.loc	1 331 20
	shl.b32 	%r611, %r4, 8;
	shl.b32 	%r612, %r4, 3;
	xor.b32  	%r613, %r612, %r559;
	or.b32  	%r32, %r613, %r611;
	shl.b32 	%r614, %r32, 1;
	add.s32 	%r615, %r595, 65536;
	add.s32 	%r325, %r615, %r614;
	shl.b32 	%r616, %r5, 8;
	or.b32  	%r33, %r616, %r613;
	shl.b32 	%r617, %r33, 1;
	add.s32 	%r327, %r615, %r617;
	shl.b32 	%r618, %r6, 8;
	or.b32  	%r34, %r618, %r613;
	shl.b32 	%r619, %r34, 1;
	add.s32 	%r329, %r615, %r619;
	shl.b32 	%r620, %r7, 8;
	or.b32  	%r35, %r620, %r613;
	shl.b32 	%r621, %r35, 1;
	add.s32 	%r331, %r615, %r621;
	shl.b32 	%r622, %r8, 8;
	or.b32  	%r36, %r622, %r613;
	shl.b32 	%r623, %r36, 1;
	add.s32 	%r333, %r615, %r623;
	shl.b32 	%r624, %r9, 8;
	or.b32  	%r37, %r624, %r613;
	shl.b32 	%r625, %r37, 1;
	add.s32 	%r335, %r615, %r625;
	shl.b32 	%r626, %r10, 8;
	or.b32  	%r38, %r626, %r613;
	shl.b32 	%r627, %r38, 1;
	add.s32 	%r337, %r615, %r627;
	shl.b32 	%r628, %r11, 8;
	or.b32  	%r39, %r628, %r613;
	shl.b32 	%r629, %r39, 1;
	add.s32 	%r339, %r615, %r629;
	shl.b32 	%r630, %r12, 8;
	or.b32  	%r40, %r630, %r613;
	shl.b32 	%r631, %r40, 1;
	add.s32 	%r341, %r615, %r631;
	shl.b32 	%r632, %r13, 8;
	or.b32  	%r41, %r632, %r613;
	shl.b32 	%r633, %r41, 1;
	add.s32 	%r343, %r615, %r633;
	shl.b32 	%r634, %r14, 8;
	or.b32  	%r42, %r634, %r613;
	shl.b32 	%r635, %r42, 1;
	add.s32 	%r345, %r615, %r635;
	shl.b32 	%r636, %r15, 8;
	or.b32  	%r43, %r636, %r613;
	shl.b32 	%r637, %r43, 1;
	add.s32 	%r347, %r615, %r637;
	shl.b32 	%r638, %r16, 8;
	or.b32  	%r44, %r638, %r613;
	shl.b32 	%r639, %r44, 1;
	add.s32 	%r349, %r615, %r639;
	shl.b32 	%r640, %r17, 8;
	or.b32  	%r45, %r640, %r613;
	shl.b32 	%r641, %r45, 1;
	add.s32 	%r351, %r615, %r641;
	shl.b32 	%r642, %r18, 8;
	or.b32  	%r46, %r642, %r613;
	shl.b32 	%r643, %r46, 1;
	add.s32 	%r353, %r615, %r643;
	shl.b32 	%r644, %r19, 8;
	or.b32  	%r47, %r644, %r613;
	shl.b32 	%r645, %r47, 1;
	add.s32 	%r355, %r615, %r645;
	selp.b32 	%r326, %r610, 0, %p52;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r325 + 0 ], [ %rd61 + 0 ], 0x10, %r326;
	// end inline asm
	selp.b32 	%r328, %r610, 0, %p53;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r327 + 0 ], [ %rd62 + 0 ], 0x10, %r328;
	// end inline asm
	selp.b32 	%r330, %r610, 0, %p54;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r329 + 0 ], [ %rd63 + 0 ], 0x10, %r330;
	// end inline asm
	selp.b32 	%r332, %r610, 0, %p55;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r331 + 0 ], [ %rd64 + 0 ], 0x10, %r332;
	// end inline asm
	selp.b32 	%r334, %r610, 0, %p56;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r333 + 0 ], [ %rd65 + 0 ], 0x10, %r334;
	// end inline asm
	selp.b32 	%r336, %r610, 0, %p57;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r335 + 0 ], [ %rd66 + 0 ], 0x10, %r336;
	// end inline asm
	selp.b32 	%r338, %r610, 0, %p58;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r337 + 0 ], [ %rd67 + 0 ], 0x10, %r338;
	// end inline asm
	selp.b32 	%r340, %r610, 0, %p59;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r339 + 0 ], [ %rd68 + 0 ], 0x10, %r340;
	// end inline asm
	selp.b32 	%r342, %r610, 0, %p60;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r341 + 0 ], [ %rd69 + 0 ], 0x10, %r342;
	// end inline asm
	selp.b32 	%r344, %r610, 0, %p61;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r343 + 0 ], [ %rd70 + 0 ], 0x10, %r344;
	// end inline asm
	selp.b32 	%r346, %r610, 0, %p62;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r345 + 0 ], [ %rd71 + 0 ], 0x10, %r346;
	// end inline asm
	selp.b32 	%r348, %r610, 0, %p63;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r347 + 0 ], [ %rd72 + 0 ], 0x10, %r348;
	// end inline asm
	selp.b32 	%r350, %r610, 0, %p64;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r349 + 0 ], [ %rd73 + 0 ], 0x10, %r350;
	// end inline asm
	selp.b32 	%r352, %r610, 0, %p65;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r351 + 0 ], [ %rd74 + 0 ], 0x10, %r352;
	// end inline asm
	selp.b32 	%r354, %r610, 0, %p66;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r353 + 0 ], [ %rd75 + 0 ], 0x10, %r354;
	// end inline asm
	selp.b32 	%r356, %r610, 0, %p67;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r355 + 0 ], [ %rd76 + 0 ], 0x10, %r356;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 327 22
	setp.gt.s32 	%p68, %r585, 255;
	.loc	1 335 18
	add.s64 	%rd77, %rd53, 256;
	add.s64 	%rd78, %rd54, 256;
	add.s64 	%rd79, %rd55, 256;
	add.s64 	%rd80, %rd56, 256;
	add.s64 	%rd81, %rd57, 256;
	add.s64 	%rd82, %rd58, 256;
	add.s64 	%rd83, %rd59, 256;
	add.s64 	%rd84, %rd60, 256;
	.loc	1 336 18
	mul.wide.s32 	%rd125, %r589, 2;
	add.s64 	%rd85, %rd61, %rd125;
	add.s64 	%rd86, %rd62, %rd125;
	add.s64 	%rd87, %rd63, %rd125;
	add.s64 	%rd88, %rd64, %rd125;
	add.s64 	%rd89, %rd65, %rd125;
	add.s64 	%rd90, %rd66, %rd125;
	add.s64 	%rd91, %rd67, %rd125;
	add.s64 	%rd92, %rd68, %rd125;
	add.s64 	%rd93, %rd69, %rd125;
	add.s64 	%rd94, %rd70, %rd125;
	add.s64 	%rd95, %rd71, %rd125;
	add.s64 	%rd96, %rd72, %rd125;
	add.s64 	%rd97, %rd73, %rd125;
	add.s64 	%rd98, %rd74, %rd125;
	add.s64 	%rd99, %rd75, %rd125;
	add.s64 	%rd100, %rd76, %rd125;
	.loc	1 330 55
	add.s32 	%r646, %r305, -128;
	.loc	1 330 51
	setp.lt.s32 	%p69, %r20, %r646;
	.loc	1 330 20
	bar.sync 	0;
	add.s32 	%r647, %r595, 32768;
	add.s32 	%r357, %r647, %r594;
	add.s32 	%r359, %r647, %r597;
	add.s32 	%r361, %r647, %r599;
	add.s32 	%r363, %r647, %r601;
	add.s32 	%r365, %r647, %r603;
	add.s32 	%r367, %r647, %r605;
	add.s32 	%r369, %r647, %r607;
	add.s32 	%r371, %r647, %r609;
	selp.b32 	%r648, 16, 0, %p69;
	selp.b32 	%r360, %r648, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r357 + 0 ], [ %rd77 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r359 + 0 ], [ %rd78 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r361 + 0 ], [ %rd79 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r363 + 0 ], [ %rd80 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r365 + 0 ], [ %rd81 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r367 + 0 ], [ %rd82 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r369 + 0 ], [ %rd83 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r371 + 0 ], [ %rd84 + 0 ], 0x10, %r360;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 331 51
	setp.lt.s32 	%p70, %r4, %r646;
	setp.lt.s32 	%p71, %r5, %r646;
	setp.lt.s32 	%p72, %r6, %r646;
	setp.lt.s32 	%p73, %r7, %r646;
	setp.lt.s32 	%p74, %r8, %r646;
	setp.lt.s32 	%p75, %r9, %r646;
	setp.lt.s32 	%p76, %r10, %r646;
	setp.lt.s32 	%p77, %r11, %r646;
	setp.lt.s32 	%p78, %r12, %r646;
	setp.lt.s32 	%p79, %r13, %r646;
	setp.lt.s32 	%p80, %r14, %r646;
	setp.lt.s32 	%p81, %r15, %r646;
	setp.lt.s32 	%p82, %r16, %r646;
	setp.lt.s32 	%p83, %r17, %r646;
	setp.lt.s32 	%p84, %r18, %r646;
	setp.lt.s32 	%p85, %r19, %r646;
	.loc	1 331 20
	add.s32 	%r649, %r595, 131072;
	add.s32 	%r373, %r649, %r614;
	add.s32 	%r375, %r649, %r617;
	add.s32 	%r377, %r649, %r619;
	add.s32 	%r379, %r649, %r621;
	add.s32 	%r381, %r649, %r623;
	add.s32 	%r383, %r649, %r625;
	add.s32 	%r385, %r649, %r627;
	add.s32 	%r387, %r649, %r629;
	add.s32 	%r389, %r649, %r631;
	add.s32 	%r391, %r649, %r633;
	add.s32 	%r393, %r649, %r635;
	add.s32 	%r395, %r649, %r637;
	add.s32 	%r397, %r649, %r639;
	add.s32 	%r399, %r649, %r641;
	add.s32 	%r401, %r649, %r643;
	add.s32 	%r403, %r649, %r645;
	selp.b32 	%r650, 16, 0, %p70;
	selp.b32 	%r374, %r650, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r373 + 0 ], [ %rd85 + 0 ], 0x10, %r374;
	// end inline asm
	selp.b32 	%r651, 16, 0, %p71;
	selp.b32 	%r376, %r651, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r375 + 0 ], [ %rd86 + 0 ], 0x10, %r376;
	// end inline asm
	selp.b32 	%r652, 16, 0, %p72;
	selp.b32 	%r378, %r652, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r377 + 0 ], [ %rd87 + 0 ], 0x10, %r378;
	// end inline asm
	selp.b32 	%r653, 16, 0, %p73;
	selp.b32 	%r380, %r653, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r379 + 0 ], [ %rd88 + 0 ], 0x10, %r380;
	// end inline asm
	selp.b32 	%r654, 16, 0, %p74;
	selp.b32 	%r382, %r654, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r381 + 0 ], [ %rd89 + 0 ], 0x10, %r382;
	// end inline asm
	selp.b32 	%r655, 16, 0, %p75;
	selp.b32 	%r384, %r655, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r383 + 0 ], [ %rd90 + 0 ], 0x10, %r384;
	// end inline asm
	selp.b32 	%r656, 16, 0, %p76;
	selp.b32 	%r386, %r656, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r385 + 0 ], [ %rd91 + 0 ], 0x10, %r386;
	// end inline asm
	selp.b32 	%r657, 16, 0, %p77;
	selp.b32 	%r388, %r657, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r387 + 0 ], [ %rd92 + 0 ], 0x10, %r388;
	// end inline asm
	selp.b32 	%r658, 16, 0, %p78;
	selp.b32 	%r390, %r658, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r389 + 0 ], [ %rd93 + 0 ], 0x10, %r390;
	// end inline asm
	selp.b32 	%r659, 16, 0, %p79;
	selp.b32 	%r392, %r659, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r391 + 0 ], [ %rd94 + 0 ], 0x10, %r392;
	// end inline asm
	selp.b32 	%r660, 16, 0, %p80;
	selp.b32 	%r394, %r660, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r393 + 0 ], [ %rd95 + 0 ], 0x10, %r394;
	// end inline asm
	selp.b32 	%r661, 16, 0, %p81;
	selp.b32 	%r396, %r661, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r395 + 0 ], [ %rd96 + 0 ], 0x10, %r396;
	// end inline asm
	selp.b32 	%r662, 16, 0, %p82;
	selp.b32 	%r398, %r662, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r397 + 0 ], [ %rd97 + 0 ], 0x10, %r398;
	// end inline asm
	selp.b32 	%r663, 16, 0, %p83;
	selp.b32 	%r400, %r663, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r399 + 0 ], [ %rd98 + 0 ], 0x10, %r400;
	// end inline asm
	selp.b32 	%r664, 16, 0, %p84;
	selp.b32 	%r402, %r664, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r401 + 0 ], [ %rd99 + 0 ], 0x10, %r402;
	// end inline asm
	selp.b32 	%r665, 16, 0, %p85;
	selp.b32 	%r404, %r665, 0, %p68;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r403 + 0 ], [ %rd100 + 0 ], 0x10, %r404;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 330 20
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r48, %r2, 7;
	bfe.u32 	%r49, %r2, 4, 1;
	shr.u32 	%r666, %r2, 3;
	and.b32  	%r50, %r666, 16;
	and.b32  	%r667, %r2, 15;
	or.b32  	%r668, %r667, %r50;
	xor.b32  	%r669, %r49, %r48;
	shl.b32 	%r51, %r668, 7;
	shl.b32 	%r670, %r669, 3;
	or.b32  	%r52, %r51, %r670;
	shl.b32 	%r671, %r52, 1;
	add.s32 	%r409, %r595, %r671;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2837, %r2838, %r2839, %r2840 }, [ %r409 + 0 ];
	// end inline asm
	add.s32 	%r414, %r409, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2833, %r2834, %r2835, %r2836 }, [ %r414 + 0 ];
	// end inline asm
	add.s32 	%r419, %r409, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2829, %r2830, %r2831, %r2832 }, [ %r419 + 0 ];
	// end inline asm
	add.s32 	%r424, %r409, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2825, %r2826, %r2827, %r2828 }, [ %r424 + 0 ];
	// end inline asm
	.loc	1 331 20
	bfe.u32 	%r69, %r2, 5, 2;
	shl.b32 	%r672, %r49, 2;
	or.b32  	%r673, %r672, %r69;
	xor.b32  	%r674, %r673, %r48;
	shl.b32 	%r675, %r667, 8;
	shl.b32 	%r676, %r674, 3;
	or.b32  	%r70, %r676, %r675;
	shl.b32 	%r677, %r70, 1;
	add.s32 	%r429, %r615, %r677;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2821, %r2822, %r2823, %r2824 }, [ %r429 + 0 ];
	// end inline asm
	or.b32  	%r678, %r673, 8;
	xor.b32  	%r679, %r678, %r48;
	shl.b32 	%r680, %r679, 3;
	add.s32 	%r75, %r680, %r675;
	shl.b32 	%r681, %r75, 1;
	add.s32 	%r434, %r615, %r681;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2817, %r2818, %r2819, %r2820 }, [ %r434 + 0 ];
	// end inline asm
	or.b32  	%r682, %r673, 16;
	xor.b32  	%r683, %r682, %r48;
	shl.b32 	%r684, %r683, 3;
	add.s32 	%r80, %r684, %r675;
	shl.b32 	%r685, %r80, 1;
	add.s32 	%r439, %r615, %r685;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2813, %r2814, %r2815, %r2816 }, [ %r439 + 0 ];
	// end inline asm
	or.b32  	%r686, %r673, 24;
	xor.b32  	%r687, %r686, %r48;
	shl.b32 	%r688, %r687, 3;
	add.s32 	%r85, %r688, %r675;
	shl.b32 	%r689, %r85, 1;
	add.s32 	%r444, %r615, %r689;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2809, %r2810, %r2811, %r2812 }, [ %r444 + 0 ];
	// end inline asm
	mov.b32 	%r2846, 0;
	mov.u32 	%r2847, %r2846;
	mov.u32 	%r2848, %r2846;
	mov.u32 	%r2849, %r2846;
	mov.u32 	%r2850, %r2846;
	mov.u32 	%r2851, %r2846;
	mov.u32 	%r2852, %r2846;
	mov.u32 	%r2853, %r2846;
	mov.u32 	%r2854, %r2846;
	mov.u32 	%r2855, %r2846;
	mov.u32 	%r2856, %r2846;
	mov.u32 	%r2857, %r2846;
	mov.u32 	%r2858, %r2846;
	mov.u32 	%r2859, %r2846;
	mov.u32 	%r2860, %r2846;
	mov.u32 	%r2861, %r2846;
	mov.u32 	%r2862, %r2846;
	mov.u32 	%r2863, %r2846;
	mov.u32 	%r2864, %r2846;
	mov.u32 	%r2865, %r2846;
	mov.u32 	%r2866, %r2846;
	mov.u32 	%r2867, %r2846;
	mov.u32 	%r2868, %r2846;
	mov.u32 	%r2869, %r2846;
	mov.u32 	%r2870, %r2846;
	mov.u32 	%r2871, %r2846;
	mov.u32 	%r2872, %r2846;
	mov.u32 	%r2873, %r2846;
	mov.u32 	%r2874, %r2846;
	mov.u32 	%r2875, %r2846;
	mov.u32 	%r2876, %r2846;
	mov.u32 	%r2877, %r2846;
	mov.u32 	%r2878, %r2846;
	mov.u32 	%r2879, %r2846;
	mov.u32 	%r2880, %r2846;
	mov.u32 	%r2881, %r2846;
	mov.u32 	%r2882, %r2846;
	mov.u32 	%r2883, %r2846;
	mov.u32 	%r2884, %r2846;
	mov.u32 	%r2885, %r2846;
	mov.u32 	%r2886, %r2846;
	mov.u32 	%r2887, %r2846;
	mov.u32 	%r2888, %r2846;
	mov.u32 	%r2889, %r2846;
	mov.u32 	%r2890, %r2846;
	mov.u32 	%r2891, %r2846;
	mov.u32 	%r2892, %r2846;
	mov.u32 	%r2893, %r2846;
	mov.u32 	%r2894, %r2846;
	mov.u32 	%r2895, %r2846;
	mov.u32 	%r2896, %r2846;
	mov.u32 	%r2897, %r2846;
	mov.u32 	%r2898, %r2846;
	mov.u32 	%r2899, %r2846;
	mov.u32 	%r2900, %r2846;
	mov.u32 	%r2901, %r2846;
	mov.u32 	%r2902, %r2846;
	mov.u32 	%r2903, %r2846;
	mov.u32 	%r2904, %r2846;
	mov.u32 	%r2905, %r2846;
	mov.u32 	%r2906, %r2846;
	mov.u32 	%r2907, %r2846;
	mov.u32 	%r2908, %r2846;
	mov.u32 	%r2909, %r2846;
	.loc	1 327 22
	@%p49 bra 	$L__BB0_4;
	.loc	1 0 22
	cvt.s64.s32 	%rd1, %r560;
	cvt.s64.s32 	%rd2, %r561;
	cvt.s64.s32 	%rd3, %r562;
	cvt.s64.s32 	%rd4, %r563;
	cvt.s64.s32 	%rd5, %r564;
	cvt.s64.s32 	%rd6, %r565;
	cvt.s64.s32 	%rd7, %r566;
	cvt.s64.s32 	%rd8, %r567;
	cvt.s64.s32 	%rd9, %r569;
	cvt.s64.s32 	%rd10, %r570;
	cvt.s64.s32 	%rd11, %r571;
	cvt.s64.s32 	%rd12, %r572;
	cvt.s64.s32 	%rd13, %r573;
	cvt.s64.s32 	%rd14, %r574;
	cvt.s64.s32 	%rd15, %r575;
	cvt.s64.s32 	%rd16, %r576;
	cvt.s64.s32 	%rd17, %r577;
	cvt.s64.s32 	%rd18, %r578;
	shr.s32 	%r586, %r585, 31;
	shr.u32 	%r587, %r586, 25;
	add.s32 	%r588, %r585, %r587;
	shr.s32 	%r23, %r588, 7;
	cvt.s64.s32 	%rd19, %r589;
	add.s32 	%r90, %r23, -2;
	or.b32  	%r694, %r49, 2;
	xor.b32  	%r695, %r694, %r48;
	shl.b32 	%r696, %r695, 3;
	or.b32  	%r697, %r49, 4;
	xor.b32  	%r698, %r697, %r48;
	shl.b32 	%r699, %r698, 3;
	or.b32  	%r700, %r49, 6;
	xor.b32  	%r701, %r700, %r48;
	shl.b32 	%r702, %r701, 3;
	or.b32  	%r703, %r49, 8;
	xor.b32  	%r704, %r703, %r48;
	shl.b32 	%r705, %r704, 3;
	or.b32  	%r706, %r49, 10;
	xor.b32  	%r707, %r706, %r48;
	shl.b32 	%r708, %r707, 3;
	or.b32  	%r709, %r49, 12;
	xor.b32  	%r710, %r709, %r48;
	shl.b32 	%r711, %r710, 3;
	or.b32  	%r712, %r49, 14;
	xor.b32  	%r713, %r712, %r48;
	shl.b32 	%r714, %r713, 3;
	add.s32 	%r2808, %r305, -256;
	or.b32  	%r92, %r51, %r696;
	or.b32  	%r93, %r51, %r699;
	or.b32  	%r94, %r51, %r702;
	or.b32  	%r95, %r51, %r705;
	or.b32  	%r96, %r51, %r708;
	or.b32  	%r97, %r51, %r711;
	or.b32  	%r98, %r51, %r714;
	.loc	1 327 22
	mad.lo.s32 	%r716, %r306, %r19, %r22;
	mul.wide.s32 	%rd20, %r716, 2;
	shl.b64 	%rd126, %rd19, 2;
	add.s64 	%rd209, %rd51, %rd126;
	shl.b64 	%rd22, %rd19, 1;
	mad.lo.s32 	%r718, %r306, %r18, %r22;
	mul.wide.s32 	%rd23, %r718, 2;
	mad.lo.s32 	%r720, %r306, %r17, %r22;
	mul.wide.s32 	%rd24, %r720, 2;
	mad.lo.s32 	%r722, %r306, %r16, %r22;
	mul.wide.s32 	%rd25, %r722, 2;
	mad.lo.s32 	%r724, %r306, %r15, %r22;
	mul.wide.s32 	%rd26, %r724, 2;
	mad.lo.s32 	%r726, %r306, %r14, %r22;
	mul.wide.s32 	%rd27, %r726, 2;
	shl.b64 	%rd28, %rd18, 1;
	shl.b64 	%rd29, %rd17, 1;
	shl.b64 	%rd30, %rd16, 1;
	shl.b64 	%rd31, %rd15, 1;
	shl.b64 	%rd32, %rd14, 1;
	shl.b64 	%rd33, %rd13, 1;
	shl.b64 	%rd34, %rd12, 1;
	shl.b64 	%rd35, %rd11, 1;
	shl.b64 	%rd36, %rd10, 1;
	shl.b64 	%rd37, %rd9, 1;
	shl.b64 	%rd127, %rd8, 1;
	add.s64 	%rd38, %rd127, 512;
	shl.b64 	%rd128, %rd7, 1;
	add.s64 	%rd39, %rd128, 512;
	shl.b64 	%rd129, %rd6, 1;
	add.s64 	%rd40, %rd129, 512;
	shl.b64 	%rd130, %rd5, 1;
	add.s64 	%rd41, %rd130, 512;
	shl.b64 	%rd131, %rd4, 1;
	add.s64 	%rd42, %rd131, 512;
	shl.b64 	%rd132, %rd3, 1;
	add.s64 	%rd43, %rd132, 512;
	shl.b64 	%rd133, %rd2, 1;
	add.s64 	%rd44, %rd133, 512;
	shl.b64 	%rd134, %rd1, 1;
	add.s64 	%rd45, %rd134, 512;
	mov.f32 	%f2306, 0f00000000;
	mov.b32 	%r2844, 1;
	mov.b32 	%r2843, 0;
	shl.b32 	%r2631, %r92, 1;
	shl.b32 	%r2640, %r93, 1;
	shl.b32 	%r2641, %r94, 1;
	shl.b32 	%r2642, %r95, 1;
	shl.b32 	%r2643, %r96, 1;
	shl.b32 	%r2644, %r97, 1;
	shl.b32 	%r2645, %r98, 1;
	mov.u32 	%r2841, %r615;
	mov.u32 	%r2842, %r595;
	mov.f32 	%f2307, %f2306;
	mov.f32 	%f2308, %f2306;
	mov.f32 	%f2309, %f2306;
	mov.f32 	%f2310, %f2306;
	mov.f32 	%f2311, %f2306;
	mov.f32 	%f2312, %f2306;
	mov.f32 	%f2313, %f2306;
	mov.f32 	%f2314, %f2306;
	mov.f32 	%f2315, %f2306;
	mov.f32 	%f2316, %f2306;
	mov.f32 	%f2317, %f2306;
	mov.f32 	%f2318, %f2306;
	mov.f32 	%f2319, %f2306;
	mov.f32 	%f2320, %f2306;
	mov.f32 	%f2321, %f2306;
	mov.f32 	%f2322, %f2306;
	mov.f32 	%f2323, %f2306;
	mov.f32 	%f2324, %f2306;
	mov.f32 	%f2325, %f2306;
	mov.f32 	%f2326, %f2306;
	mov.f32 	%f2327, %f2306;
	mov.f32 	%f2328, %f2306;
	mov.f32 	%f2329, %f2306;
	mov.f32 	%f2330, %f2306;
	mov.f32 	%f2331, %f2306;
	mov.f32 	%f2332, %f2306;
	mov.f32 	%f2333, %f2306;
	mov.f32 	%f2334, %f2306;
	mov.f32 	%f2335, %f2306;
	mov.f32 	%f2336, %f2306;
	mov.f32 	%f2337, %f2306;
	mov.f32 	%f2338, %f2306;
	mov.f32 	%f2339, %f2306;
	mov.f32 	%f2340, %f2306;
	mov.f32 	%f2341, %f2306;
	mov.f32 	%f2342, %f2306;
	mov.f32 	%f2343, %f2306;
	mov.f32 	%f2344, %f2306;
	mov.f32 	%f2345, %f2306;
	mov.f32 	%f2346, %f2306;
	mov.f32 	%f2347, %f2306;
	mov.f32 	%f2348, %f2306;
	mov.f32 	%f2349, %f2306;
	mov.f32 	%f2350, %f2306;
	mov.f32 	%f2351, %f2306;
	mov.f32 	%f2352, %f2306;
	mov.f32 	%f2353, %f2306;
	mov.f32 	%f2354, %f2306;
	mov.f32 	%f2355, %f2306;
	mov.f32 	%f2356, %f2306;
	mov.f32 	%f2357, %f2306;
	mov.f32 	%f2358, %f2306;
	mov.f32 	%f2359, %f2306;
	mov.f32 	%f2360, %f2306;
	mov.f32 	%f2361, %f2306;
	mov.f32 	%f2362, %f2306;
	mov.f32 	%f2363, %f2306;
	mov.f32 	%f2364, %f2306;
	mov.f32 	%f2365, %f2306;
	mov.f32 	%f2366, %f2306;
	mov.f32 	%f2367, %f2306;
	mov.f32 	%f2368, %f2306;
	mov.f32 	%f2369, %f2306;
	mov.f32 	%f2370, %f2306;
	mov.f32 	%f2371, %f2306;
	mov.f32 	%f2372, %f2306;
	mov.f32 	%f2373, %f2306;
	mov.f32 	%f2374, %f2306;
	mov.f32 	%f2375, %f2306;
	mov.f32 	%f2376, %f2306;
	mov.f32 	%f2377, %f2306;
	mov.f32 	%f2378, %f2306;
	mov.f32 	%f2379, %f2306;
	mov.f32 	%f2380, %f2306;
	mov.f32 	%f2381, %f2306;
	mov.f32 	%f2382, %f2306;
	mov.f32 	%f2383, %f2306;
	mov.f32 	%f2384, %f2306;
	mov.f32 	%f2385, %f2306;
	mov.f32 	%f2386, %f2306;
	mov.f32 	%f2387, %f2306;
	mov.f32 	%f2388, %f2306;
	mov.f32 	%f2389, %f2306;
	mov.f32 	%f2390, %f2306;
	mov.f32 	%f2391, %f2306;
	mov.f32 	%f2392, %f2306;
	mov.f32 	%f2393, %f2306;
	mov.f32 	%f2394, %f2306;
	mov.f32 	%f2395, %f2306;
	mov.f32 	%f2396, %f2306;
	mov.f32 	%f2397, %f2306;
	mov.f32 	%f2398, %f2306;
	mov.f32 	%f2399, %f2306;
	mov.f32 	%f2400, %f2306;
	mov.f32 	%f2401, %f2306;
	mov.f32 	%f2402, %f2306;
	mov.f32 	%f2403, %f2306;
	mov.f32 	%f2404, %f2306;
	mov.f32 	%f2405, %f2306;
	mov.f32 	%f2406, %f2306;
	mov.f32 	%f2407, %f2306;
	mov.f32 	%f2408, %f2306;
	mov.f32 	%f2409, %f2306;
	mov.f32 	%f2410, %f2306;
	mov.f32 	%f2411, %f2306;
	mov.f32 	%f2412, %f2306;
	mov.f32 	%f2413, %f2306;
	mov.f32 	%f2414, %f2306;
	mov.f32 	%f2415, %f2306;
	mov.f32 	%f2416, %f2306;
	mov.f32 	%f2417, %f2306;
	mov.f32 	%f2418, %f2306;
	mov.f32 	%f2419, %f2306;
	mov.f32 	%f2420, %f2306;
	mov.f32 	%f2421, %f2306;
	mov.f32 	%f2422, %f2306;
	mov.f32 	%f2423, %f2306;
	mov.f32 	%f2424, %f2306;
	mov.f32 	%f2425, %f2306;
	mov.f32 	%f2426, %f2306;
	mov.f32 	%f2427, %f2306;
	mov.f32 	%f2428, %f2306;
	mov.f32 	%f2429, %f2306;
	mov.f32 	%f2430, %f2306;
	mov.f32 	%f2431, %f2306;
	mov.f32 	%f2432, %f2306;
	mov.f32 	%f2433, %f2306;
	mov.u32 	%r2845, %r2843;
$L__BB0_2:
	setp.lt.s32 	%p110, %r2845, %r90;
	.loc	1 330 20
	add.s32 	%r731, %r2842, %r2631;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r999, %r1000, %r1001, %r1002 }, [ %r731 + 0 ];
	// end inline asm
	add.s32 	%r736, %r731, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1047, %r1048, %r1049, %r1050 }, [ %r736 + 0 ];
	// end inline asm
	add.s32 	%r741, %r731, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1095, %r1096, %r1097, %r1098 }, [ %r741 + 0 ];
	// end inline asm
	add.s32 	%r746, %r731, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1143, %r1144, %r1145, %r1146 }, [ %r746 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r2633, %r2841, %r677;
	add.s32 	%r751, %r2633, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1003, %r1004, %r1009, %r1010 }, [ %r751 + 0 ];
	// end inline asm
	add.s32 	%r2635, %r2841, %r681;
	add.s32 	%r756, %r2635, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1015, %r1016, %r1021, %r1022 }, [ %r756 + 0 ];
	// end inline asm
	add.s32 	%r2637, %r2841, %r685;
	add.s32 	%r761, %r2637, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1027, %r1028, %r1033, %r1034 }, [ %r761 + 0 ];
	// end inline asm
	add.s32 	%r2639, %r2841, %r689;
	add.s32 	%r766, %r2639, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1039, %r1040, %r1045, %r1046 }, [ %r766 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2821, %r2822 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2823, %r2824 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2817, %r2818 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2819, %r2820 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2813, %r2814 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2815, %r2816 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2809, %r2810 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r2837, %r2838, %r2839, %r2840 }, { %r2811, %r2812 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2821, %r2822 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2823, %r2824 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2817, %r2818 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2819, %r2820 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2813, %r2814 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2815, %r2816 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2809, %r2810 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r2833, %r2834, %r2835, %r2836 }, { %r2811, %r2812 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2821, %r2822 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2823, %r2824 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2817, %r2818 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2819, %r2820 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2813, %r2814 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2815, %r2816 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2809, %r2810 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r2829, %r2830, %r2831, %r2832 }, { %r2811, %r2812 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2821, %r2822 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2823, %r2824 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2817, %r2818 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2819, %r2820 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2813, %r2814 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2815, %r2816 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2809, %r2810 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r2825, %r2826, %r2827, %r2828 }, { %r2811, %r2812 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r963, %r2842, %r2640;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1231, %r1232, %r1233, %r1234 }, [ %r963 + 0 ];
	// end inline asm
	add.s32 	%r968, %r963, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1279, %r1280, %r1281, %r1282 }, [ %r968 + 0 ];
	// end inline asm
	add.s32 	%r973, %r963, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1327, %r1328, %r1329, %r1330 }, [ %r973 + 0 ];
	// end inline asm
	add.s32 	%r978, %r963, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1375, %r1376, %r1377, %r1378 }, [ %r978 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r983, %r2633, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1235, %r1236, %r1241, %r1242 }, [ %r983 + 0 ];
	// end inline asm
	add.s32 	%r988, %r2635, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1247, %r1248, %r1253, %r1254 }, [ %r988 + 0 ];
	// end inline asm
	add.s32 	%r993, %r2637, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1259, %r1260, %r1265, %r1266 }, [ %r993 + 0 ];
	// end inline asm
	add.s32 	%r998, %r2639, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1271, %r1272, %r1277, %r1278 }, [ %r998 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r999, %r1000, %r1001, %r1002 }, { %r1003, %r1004 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r999, %r1000, %r1001, %r1002 }, { %r1009, %r1010 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r999, %r1000, %r1001, %r1002 }, { %r1015, %r1016 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r999, %r1000, %r1001, %r1002 }, { %r1021, %r1022 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r999, %r1000, %r1001, %r1002 }, { %r1027, %r1028 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r999, %r1000, %r1001, %r1002 }, { %r1033, %r1034 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r999, %r1000, %r1001, %r1002 }, { %r1039, %r1040 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r999, %r1000, %r1001, %r1002 }, { %r1045, %r1046 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1003, %r1004 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1009, %r1010 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1015, %r1016 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1021, %r1022 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1027, %r1028 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1033, %r1034 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1039, %r1040 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r1047, %r1048, %r1049, %r1050 }, { %r1045, %r1046 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1003, %r1004 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1009, %r1010 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1015, %r1016 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1021, %r1022 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1027, %r1028 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1033, %r1034 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1039, %r1040 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r1095, %r1096, %r1097, %r1098 }, { %r1045, %r1046 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1003, %r1004 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1009, %r1010 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1015, %r1016 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1021, %r1022 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1027, %r1028 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1033, %r1034 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1039, %r1040 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r1143, %r1144, %r1145, %r1146 }, { %r1045, %r1046 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r1195, %r2842, %r2641;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1463, %r1464, %r1465, %r1466 }, [ %r1195 + 0 ];
	// end inline asm
	add.s32 	%r1200, %r1195, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1511, %r1512, %r1513, %r1514 }, [ %r1200 + 0 ];
	// end inline asm
	add.s32 	%r1205, %r1195, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1559, %r1560, %r1561, %r1562 }, [ %r1205 + 0 ];
	// end inline asm
	add.s32 	%r1210, %r1195, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1607, %r1608, %r1609, %r1610 }, [ %r1210 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r1215, %r2633, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1467, %r1468, %r1473, %r1474 }, [ %r1215 + 0 ];
	// end inline asm
	add.s32 	%r1220, %r2635, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1479, %r1480, %r1485, %r1486 }, [ %r1220 + 0 ];
	// end inline asm
	add.s32 	%r1225, %r2637, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1491, %r1492, %r1497, %r1498 }, [ %r1225 + 0 ];
	// end inline asm
	add.s32 	%r1230, %r2639, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1503, %r1504, %r1509, %r1510 }, [ %r1230 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1235, %r1236 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1241, %r1242 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1247, %r1248 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1253, %r1254 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1259, %r1260 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1265, %r1266 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1271, %r1272 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r1231, %r1232, %r1233, %r1234 }, { %r1277, %r1278 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1235, %r1236 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1241, %r1242 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1247, %r1248 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1253, %r1254 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1259, %r1260 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1265, %r1266 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1271, %r1272 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r1279, %r1280, %r1281, %r1282 }, { %r1277, %r1278 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1235, %r1236 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1241, %r1242 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1247, %r1248 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1253, %r1254 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1259, %r1260 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1265, %r1266 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1271, %r1272 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r1327, %r1328, %r1329, %r1330 }, { %r1277, %r1278 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1235, %r1236 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1241, %r1242 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1247, %r1248 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1253, %r1254 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1259, %r1260 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1265, %r1266 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1271, %r1272 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r1375, %r1376, %r1377, %r1378 }, { %r1277, %r1278 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r1427, %r2842, %r2642;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1695, %r1696, %r1697, %r1698 }, [ %r1427 + 0 ];
	// end inline asm
	add.s32 	%r1432, %r1427, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1743, %r1744, %r1745, %r1746 }, [ %r1432 + 0 ];
	// end inline asm
	add.s32 	%r1437, %r1427, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1791, %r1792, %r1793, %r1794 }, [ %r1437 + 0 ];
	// end inline asm
	add.s32 	%r1442, %r1427, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1839, %r1840, %r1841, %r1842 }, [ %r1442 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r1447, %r2633, 32768;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1699, %r1700, %r1705, %r1706 }, [ %r1447 + 0 ];
	// end inline asm
	add.s32 	%r1452, %r2635, 32768;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1711, %r1712, %r1717, %r1718 }, [ %r1452 + 0 ];
	// end inline asm
	add.s32 	%r1457, %r2637, 32768;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1723, %r1724, %r1729, %r1730 }, [ %r1457 + 0 ];
	// end inline asm
	add.s32 	%r1462, %r2639, 32768;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1735, %r1736, %r1741, %r1742 }, [ %r1462 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1467, %r1468 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1473, %r1474 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1479, %r1480 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1485, %r1486 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1491, %r1492 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1497, %r1498 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1503, %r1504 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r1463, %r1464, %r1465, %r1466 }, { %r1509, %r1510 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1467, %r1468 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1473, %r1474 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1479, %r1480 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1485, %r1486 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1491, %r1492 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1497, %r1498 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1503, %r1504 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r1511, %r1512, %r1513, %r1514 }, { %r1509, %r1510 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1467, %r1468 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1473, %r1474 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1479, %r1480 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1485, %r1486 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1491, %r1492 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1497, %r1498 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1503, %r1504 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r1559, %r1560, %r1561, %r1562 }, { %r1509, %r1510 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1467, %r1468 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1473, %r1474 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1479, %r1480 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1485, %r1486 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1491, %r1492 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1497, %r1498 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1503, %r1504 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r1607, %r1608, %r1609, %r1610 }, { %r1509, %r1510 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r1659, %r2842, %r2643;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1927, %r1928, %r1929, %r1930 }, [ %r1659 + 0 ];
	// end inline asm
	add.s32 	%r1664, %r1659, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r1975, %r1976, %r1977, %r1978 }, [ %r1664 + 0 ];
	// end inline asm
	add.s32 	%r1669, %r1659, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2023, %r2024, %r2025, %r2026 }, [ %r1669 + 0 ];
	// end inline asm
	add.s32 	%r1674, %r1659, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2071, %r2072, %r2073, %r2074 }, [ %r1674 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r1679, %r2633, 40960;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1931, %r1932, %r1937, %r1938 }, [ %r1679 + 0 ];
	// end inline asm
	add.s32 	%r1684, %r2635, 40960;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1943, %r1944, %r1949, %r1950 }, [ %r1684 + 0 ];
	// end inline asm
	add.s32 	%r1689, %r2637, 40960;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1955, %r1956, %r1961, %r1962 }, [ %r1689 + 0 ];
	// end inline asm
	add.s32 	%r1694, %r2639, 40960;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r1967, %r1968, %r1973, %r1974 }, [ %r1694 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1699, %r1700 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1705, %r1706 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1711, %r1712 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1717, %r1718 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1723, %r1724 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1729, %r1730 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1735, %r1736 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r1695, %r1696, %r1697, %r1698 }, { %r1741, %r1742 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1699, %r1700 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1705, %r1706 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1711, %r1712 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1717, %r1718 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1723, %r1724 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1729, %r1730 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1735, %r1736 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r1743, %r1744, %r1745, %r1746 }, { %r1741, %r1742 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1699, %r1700 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1705, %r1706 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1711, %r1712 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1717, %r1718 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1723, %r1724 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1729, %r1730 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1735, %r1736 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r1791, %r1792, %r1793, %r1794 }, { %r1741, %r1742 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1699, %r1700 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1705, %r1706 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1711, %r1712 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1717, %r1718 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1723, %r1724 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1729, %r1730 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1735, %r1736 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r1839, %r1840, %r1841, %r1842 }, { %r1741, %r1742 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r1891, %r2842, %r2644;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2159, %r2160, %r2161, %r2162 }, [ %r1891 + 0 ];
	// end inline asm
	add.s32 	%r1896, %r1891, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2207, %r2208, %r2209, %r2210 }, [ %r1896 + 0 ];
	// end inline asm
	add.s32 	%r1901, %r1891, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2255, %r2256, %r2257, %r2258 }, [ %r1901 + 0 ];
	// end inline asm
	add.s32 	%r1906, %r1891, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2303, %r2304, %r2305, %r2306 }, [ %r1906 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r1911, %r2633, 49152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2163, %r2164, %r2169, %r2170 }, [ %r1911 + 0 ];
	// end inline asm
	add.s32 	%r1916, %r2635, 49152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2175, %r2176, %r2181, %r2182 }, [ %r1916 + 0 ];
	// end inline asm
	add.s32 	%r1921, %r2637, 49152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2187, %r2188, %r2193, %r2194 }, [ %r1921 + 0 ];
	// end inline asm
	add.s32 	%r1926, %r2639, 49152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2199, %r2200, %r2205, %r2206 }, [ %r1926 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1931, %r1932 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1937, %r1938 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1943, %r1944 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1949, %r1950 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1955, %r1956 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1961, %r1962 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1967, %r1968 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r1927, %r1928, %r1929, %r1930 }, { %r1973, %r1974 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1931, %r1932 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1937, %r1938 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1943, %r1944 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1949, %r1950 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1955, %r1956 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1961, %r1962 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1967, %r1968 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r1975, %r1976, %r1977, %r1978 }, { %r1973, %r1974 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1931, %r1932 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1937, %r1938 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1943, %r1944 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1949, %r1950 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1955, %r1956 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1961, %r1962 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1967, %r1968 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r2023, %r2024, %r2025, %r2026 }, { %r1973, %r1974 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1931, %r1932 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1937, %r1938 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1943, %r1944 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1949, %r1950 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1955, %r1956 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1961, %r1962 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1967, %r1968 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r2071, %r2072, %r2073, %r2074 }, { %r1973, %r1974 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 330 20
	add.s32 	%r2123, %r2842, %r2645;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2351, %r2352, %r2353, %r2354 }, [ %r2123 + 0 ];
	// end inline asm
	add.s32 	%r2128, %r2123, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2399, %r2400, %r2401, %r2402 }, [ %r2128 + 0 ];
	// end inline asm
	add.s32 	%r2133, %r2123, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2447, %r2448, %r2449, %r2450 }, [ %r2133 + 0 ];
	// end inline asm
	add.s32 	%r2138, %r2123, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2495, %r2496, %r2497, %r2498 }, [ %r2138 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r2143, %r2633, 57344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2355, %r2356, %r2361, %r2362 }, [ %r2143 + 0 ];
	// end inline asm
	add.s32 	%r2148, %r2635, 57344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2367, %r2368, %r2373, %r2374 }, [ %r2148 + 0 ];
	// end inline asm
	add.s32 	%r2153, %r2637, 57344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2379, %r2380, %r2385, %r2386 }, [ %r2153 + 0 ];
	// end inline asm
	add.s32 	%r2158, %r2639, 57344;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2391, %r2392, %r2397, %r2398 }, [ %r2158 + 0 ];
	// end inline asm
	.loc	1 333 35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2163, %r2164 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2169, %r2170 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2175, %r2176 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2181, %r2182 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2187, %r2188 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2193, %r2194 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2199, %r2200 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r2159, %r2160, %r2161, %r2162 }, { %r2205, %r2206 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2163, %r2164 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2169, %r2170 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2175, %r2176 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2181, %r2182 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2187, %r2188 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2193, %r2194 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2199, %r2200 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r2207, %r2208, %r2209, %r2210 }, { %r2205, %r2206 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2163, %r2164 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2169, %r2170 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2175, %r2176 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2181, %r2182 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2187, %r2188 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2193, %r2194 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2199, %r2200 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r2255, %r2256, %r2257, %r2258 }, { %r2205, %r2206 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2163, %r2164 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2169, %r2170 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2175, %r2176 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2181, %r2182 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2187, %r2188 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2193, %r2194 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2199, %r2200 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r2303, %r2304, %r2305, %r2306 }, { %r2205, %r2206 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2306, %f2307, %f2308, %f2309 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2355, %r2356 }, { %f2306, %f2307, %f2308, %f2309 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2310, %f2311, %f2312, %f2313 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2361, %r2362 }, { %f2310, %f2311, %f2312, %f2313 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2314, %f2315, %f2316, %f2317 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2367, %r2368 }, { %f2314, %f2315, %f2316, %f2317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2318, %f2319, %f2320, %f2321 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2373, %r2374 }, { %f2318, %f2319, %f2320, %f2321 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2322, %f2323, %f2324, %f2325 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2379, %r2380 }, { %f2322, %f2323, %f2324, %f2325 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2326, %f2327, %f2328, %f2329 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2385, %r2386 }, { %f2326, %f2327, %f2328, %f2329 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2330, %f2331, %f2332, %f2333 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2391, %r2392 }, { %f2330, %f2331, %f2332, %f2333 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2334, %f2335, %f2336, %f2337 }, { %r2351, %r2352, %r2353, %r2354 }, { %r2397, %r2398 }, { %f2334, %f2335, %f2336, %f2337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2338, %f2339, %f2340, %f2341 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2355, %r2356 }, { %f2338, %f2339, %f2340, %f2341 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2342, %f2343, %f2344, %f2345 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2361, %r2362 }, { %f2342, %f2343, %f2344, %f2345 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2346, %f2347, %f2348, %f2349 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2367, %r2368 }, { %f2346, %f2347, %f2348, %f2349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2350, %f2351, %f2352, %f2353 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2373, %r2374 }, { %f2350, %f2351, %f2352, %f2353 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2354, %f2355, %f2356, %f2357 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2379, %r2380 }, { %f2354, %f2355, %f2356, %f2357 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2358, %f2359, %f2360, %f2361 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2385, %r2386 }, { %f2358, %f2359, %f2360, %f2361 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2362, %f2363, %f2364, %f2365 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2391, %r2392 }, { %f2362, %f2363, %f2364, %f2365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2366, %f2367, %f2368, %f2369 }, { %r2399, %r2400, %r2401, %r2402 }, { %r2397, %r2398 }, { %f2366, %f2367, %f2368, %f2369 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2370, %f2371, %f2372, %f2373 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2355, %r2356 }, { %f2370, %f2371, %f2372, %f2373 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2374, %f2375, %f2376, %f2377 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2361, %r2362 }, { %f2374, %f2375, %f2376, %f2377 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2378, %f2379, %f2380, %f2381 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2367, %r2368 }, { %f2378, %f2379, %f2380, %f2381 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2382, %f2383, %f2384, %f2385 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2373, %r2374 }, { %f2382, %f2383, %f2384, %f2385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2386, %f2387, %f2388, %f2389 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2379, %r2380 }, { %f2386, %f2387, %f2388, %f2389 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2390, %f2391, %f2392, %f2393 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2385, %r2386 }, { %f2390, %f2391, %f2392, %f2393 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2394, %f2395, %f2396, %f2397 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2391, %r2392 }, { %f2394, %f2395, %f2396, %f2397 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2398, %f2399, %f2400, %f2401 }, { %r2447, %r2448, %r2449, %r2450 }, { %r2397, %r2398 }, { %f2398, %f2399, %f2400, %f2401 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2402, %f2403, %f2404, %f2405 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2355, %r2356 }, { %f2402, %f2403, %f2404, %f2405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2406, %f2407, %f2408, %f2409 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2361, %r2362 }, { %f2406, %f2407, %f2408, %f2409 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2410, %f2411, %f2412, %f2413 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2367, %r2368 }, { %f2410, %f2411, %f2412, %f2413 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2414, %f2415, %f2416, %f2417 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2373, %r2374 }, { %f2414, %f2415, %f2416, %f2417 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2418, %f2419, %f2420, %f2421 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2379, %r2380 }, { %f2418, %f2419, %f2420, %f2421 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2422, %f2423, %f2424, %f2425 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2385, %r2386 }, { %f2422, %f2423, %f2424, %f2425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2426, %f2427, %f2428, %f2429 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2391, %r2392 }, { %f2426, %f2427, %f2428, %f2429 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %f2430, %f2431, %f2432, %f2433 }, { %r2495, %r2496, %r2497, %r2498 }, { %r2397, %r2398 }, { %f2430, %f2431, %f2432, %f2433 };
	// end inline asm
	.loc	1 335 18
	add.s64 	%rd135, %rd208, %rd45;
	add.s64 	%rd136, %rd208, %rd44;
	add.s64 	%rd137, %rd208, %rd43;
	add.s64 	%rd138, %rd208, %rd42;
	add.s64 	%rd139, %rd208, %rd41;
	add.s64 	%rd140, %rd208, %rd40;
	add.s64 	%rd141, %rd208, %rd39;
	.loc	1 336 18
	add.s64 	%rd142, %rd208, %rd38;
	add.s64 	%rd143, %rd209, %rd37;
	add.s64 	%rd144, %rd209, %rd36;
	add.s64 	%rd145, %rd209, %rd35;
	add.s64 	%rd146, %rd209, %rd34;
	add.s64 	%rd147, %rd209, %rd33;
	add.s64 	%rd148, %rd209, %rd32;
	add.s64 	%rd149, %rd209, %rd31;
	add.s64 	%rd150, %rd209, %rd30;
	add.s64 	%rd151, %rd209, %rd29;
	add.s64 	%rd152, %rd209, %rd28;
	add.s64 	%rd153, %rd209, %rd27;
	add.s64 	%rd154, %rd209, %rd26;
	add.s64 	%rd155, %rd209, %rd25;
	add.s64 	%rd156, %rd209, %rd24;
	add.s64 	%rd157, %rd209, %rd23;
	.loc	1 327 22
	add.s64 	%rd158, %rd209, %rd20;
	add.s32 	%r2646, %r2844, 1;
	setp.lt.s32 	%p111, %r2646, 2;
	selp.b32 	%r2844, %r2646, 0, %p111;
	.loc	1 330 51
	setp.lt.s32 	%p112, %r20, %r2808;
	.loc	1 330 20
	shl.b32 	%r2647, %r2844, 15;
	add.s32 	%r2649, %r595, %r2647;
	bar.sync 	0;
	add.s32 	%r2543, %r2649, %r594;
	add.s32 	%r2545, %r2649, %r597;
	add.s32 	%r2547, %r2649, %r599;
	add.s32 	%r2549, %r2649, %r601;
	add.s32 	%r2551, %r2649, %r603;
	add.s32 	%r2553, %r2649, %r605;
	add.s32 	%r2555, %r2649, %r607;
	add.s32 	%r2557, %r2649, %r609;
	selp.b32 	%r2658, 16, 0, %p112;
	selp.b32 	%r2546, %r2658, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2543 + 0 ], [ %rd135 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2545 + 0 ], [ %rd136 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2547 + 0 ], [ %rd137 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2549 + 0 ], [ %rd138 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2551 + 0 ], [ %rd139 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2553 + 0 ], [ %rd140 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2555 + 0 ], [ %rd141 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2557 + 0 ], [ %rd142 + 0 ], 0x10, %r2546;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 331 51
	setp.lt.s32 	%p113, %r4, %r2808;
	setp.lt.s32 	%p114, %r5, %r2808;
	setp.lt.s32 	%p115, %r6, %r2808;
	setp.lt.s32 	%p116, %r7, %r2808;
	setp.lt.s32 	%p117, %r8, %r2808;
	setp.lt.s32 	%p118, %r9, %r2808;
	setp.lt.s32 	%p119, %r10, %r2808;
	setp.lt.s32 	%p120, %r11, %r2808;
	setp.lt.s32 	%p121, %r12, %r2808;
	setp.lt.s32 	%p122, %r13, %r2808;
	setp.lt.s32 	%p123, %r14, %r2808;
	setp.lt.s32 	%p124, %r15, %r2808;
	setp.lt.s32 	%p125, %r16, %r2808;
	setp.lt.s32 	%p126, %r17, %r2808;
	setp.lt.s32 	%p127, %r18, %r2808;
	setp.lt.s32 	%p128, %r19, %r2808;
	.loc	1 331 20
	shl.b32 	%r2659, %r2844, 16;
	add.s32 	%r2661, %r615, %r2659;
	add.s32 	%r2559, %r2661, %r614;
	add.s32 	%r2561, %r2661, %r617;
	add.s32 	%r2563, %r2661, %r619;
	add.s32 	%r2565, %r2661, %r621;
	add.s32 	%r2567, %r2661, %r623;
	add.s32 	%r2569, %r2661, %r625;
	add.s32 	%r2571, %r2661, %r627;
	add.s32 	%r2573, %r2661, %r629;
	add.s32 	%r2575, %r2661, %r631;
	add.s32 	%r2577, %r2661, %r633;
	add.s32 	%r2579, %r2661, %r635;
	add.s32 	%r2581, %r2661, %r637;
	add.s32 	%r2583, %r2661, %r639;
	add.s32 	%r2585, %r2661, %r641;
	add.s32 	%r2587, %r2661, %r643;
	add.s32 	%r2589, %r2661, %r645;
	selp.b32 	%r2678, 16, 0, %p113;
	selp.b32 	%r2560, %r2678, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2559 + 0 ], [ %rd143 + 0 ], 0x10, %r2560;
	// end inline asm
	selp.b32 	%r2679, 16, 0, %p114;
	selp.b32 	%r2562, %r2679, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2561 + 0 ], [ %rd144 + 0 ], 0x10, %r2562;
	// end inline asm
	selp.b32 	%r2680, 16, 0, %p115;
	selp.b32 	%r2564, %r2680, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2563 + 0 ], [ %rd145 + 0 ], 0x10, %r2564;
	// end inline asm
	selp.b32 	%r2681, 16, 0, %p116;
	selp.b32 	%r2566, %r2681, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2565 + 0 ], [ %rd146 + 0 ], 0x10, %r2566;
	// end inline asm
	selp.b32 	%r2682, 16, 0, %p117;
	selp.b32 	%r2568, %r2682, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2567 + 0 ], [ %rd147 + 0 ], 0x10, %r2568;
	// end inline asm
	selp.b32 	%r2683, 16, 0, %p118;
	selp.b32 	%r2570, %r2683, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2569 + 0 ], [ %rd148 + 0 ], 0x10, %r2570;
	// end inline asm
	selp.b32 	%r2684, 16, 0, %p119;
	selp.b32 	%r2572, %r2684, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2571 + 0 ], [ %rd149 + 0 ], 0x10, %r2572;
	// end inline asm
	selp.b32 	%r2685, 16, 0, %p120;
	selp.b32 	%r2574, %r2685, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2573 + 0 ], [ %rd150 + 0 ], 0x10, %r2574;
	// end inline asm
	selp.b32 	%r2686, 16, 0, %p121;
	selp.b32 	%r2576, %r2686, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2575 + 0 ], [ %rd151 + 0 ], 0x10, %r2576;
	// end inline asm
	selp.b32 	%r2687, 16, 0, %p122;
	selp.b32 	%r2578, %r2687, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2577 + 0 ], [ %rd152 + 0 ], 0x10, %r2578;
	// end inline asm
	selp.b32 	%r2688, 16, 0, %p123;
	selp.b32 	%r2580, %r2688, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2579 + 0 ], [ %rd153 + 0 ], 0x10, %r2580;
	// end inline asm
	selp.b32 	%r2689, 16, 0, %p124;
	selp.b32 	%r2582, %r2689, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2581 + 0 ], [ %rd154 + 0 ], 0x10, %r2582;
	// end inline asm
	selp.b32 	%r2690, 16, 0, %p125;
	selp.b32 	%r2584, %r2690, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2583 + 0 ], [ %rd155 + 0 ], 0x10, %r2584;
	// end inline asm
	selp.b32 	%r2691, 16, 0, %p126;
	selp.b32 	%r2586, %r2691, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2585 + 0 ], [ %rd156 + 0 ], 0x10, %r2586;
	// end inline asm
	selp.b32 	%r2692, 16, 0, %p127;
	selp.b32 	%r2588, %r2692, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2587 + 0 ], [ %rd157 + 0 ], 0x10, %r2588;
	// end inline asm
	selp.b32 	%r2693, 16, 0, %p128;
	selp.b32 	%r2590, %r2693, 0, %p110;
	// begin inline asm
	@%p1 cp.async.cg.shared.global [ %r2589 + 0 ], [ %rd158 + 0 ], 0x10, %r2590;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 327 22
	add.s32 	%r2694, %r2843, 1;
	setp.lt.s32 	%p129, %r2694, 2;
	selp.b32 	%r2843, %r2694, 0, %p129;
	.loc	1 330 20
	shl.b32 	%r2695, %r2843, 15;
	add.s32 	%r2842, %r595, %r2695;
	// begin inline asm
	cp.async.wait_group 0x2;
	// end inline asm
	bar.sync 	0;
	.loc	1 331 20
	shl.b32 	%r2696, %r2843, 16;
	add.s32 	%r2841, %r615, %r2696;
	.loc	1 330 20
	add.s32 	%r2595, %r2842, %r671;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2837, %r2838, %r2839, %r2840 }, [ %r2595 + 0 ];
	// end inline asm
	add.s32 	%r2600, %r2595, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2833, %r2834, %r2835, %r2836 }, [ %r2600 + 0 ];
	// end inline asm
	add.s32 	%r2605, %r2595, 16384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2829, %r2830, %r2831, %r2832 }, [ %r2605 + 0 ];
	// end inline asm
	add.s32 	%r2610, %r2595, 24576;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 { %r2825, %r2826, %r2827, %r2828 }, [ %r2610 + 0 ];
	// end inline asm
	.loc	1 331 20
	add.s32 	%r2615, %r2841, %r677;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2821, %r2822, %r2823, %r2824 }, [ %r2615 + 0 ];
	// end inline asm
	add.s32 	%r2620, %r2841, %r681;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2817, %r2818, %r2819, %r2820 }, [ %r2620 + 0 ];
	// end inline asm
	add.s32 	%r2625, %r2841, %r685;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2813, %r2814, %r2815, %r2816 }, [ %r2625 + 0 ];
	// end inline asm
	add.s32 	%r2630, %r2841, %r689;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 { %r2809, %r2810, %r2811, %r2812 }, [ %r2630 + 0 ];
	// end inline asm
	.loc	1 327 22
	add.s32 	%r2845, %r2845, 1;
	add.s64 	%rd209, %rd209, %rd22;
	add.s64 	%rd208, %rd208, 256;
	add.s32 	%r2808, %r2808, -128;
	setp.lt.s32 	%p130, %r2845, %r23;
	@%p130 bra 	$L__BB0_2;
	.loc	1 341 23
	cvt.rn.f16.f32 	%rs1, %f2433;
	cvt.rn.f16.f32 	%rs2, %f2432;
	mov.b32 	%r2909, {%rs2, %rs1};
	cvt.rn.f16.f32 	%rs3, %f2431;
	cvt.rn.f16.f32 	%rs4, %f2430;
	mov.b32 	%r2908, {%rs4, %rs3};
	cvt.rn.f16.f32 	%rs5, %f2429;
	cvt.rn.f16.f32 	%rs6, %f2428;
	mov.b32 	%r2907, {%rs6, %rs5};
	cvt.rn.f16.f32 	%rs7, %f2427;
	cvt.rn.f16.f32 	%rs8, %f2426;
	mov.b32 	%r2906, {%rs8, %rs7};
	cvt.rn.f16.f32 	%rs9, %f2425;
	cvt.rn.f16.f32 	%rs10, %f2424;
	mov.b32 	%r2905, {%rs10, %rs9};
	cvt.rn.f16.f32 	%rs11, %f2423;
	cvt.rn.f16.f32 	%rs12, %f2422;
	mov.b32 	%r2904, {%rs12, %rs11};
	cvt.rn.f16.f32 	%rs13, %f2421;
	cvt.rn.f16.f32 	%rs14, %f2420;
	mov.b32 	%r2903, {%rs14, %rs13};
	cvt.rn.f16.f32 	%rs15, %f2419;
	cvt.rn.f16.f32 	%rs16, %f2418;
	mov.b32 	%r2902, {%rs16, %rs15};
	cvt.rn.f16.f32 	%rs17, %f2417;
	cvt.rn.f16.f32 	%rs18, %f2416;
	mov.b32 	%r2901, {%rs18, %rs17};
	cvt.rn.f16.f32 	%rs19, %f2415;
	cvt.rn.f16.f32 	%rs20, %f2414;
	mov.b32 	%r2900, {%rs20, %rs19};
	cvt.rn.f16.f32 	%rs21, %f2413;
	cvt.rn.f16.f32 	%rs22, %f2412;
	mov.b32 	%r2899, {%rs22, %rs21};
	cvt.rn.f16.f32 	%rs23, %f2411;
	cvt.rn.f16.f32 	%rs24, %f2410;
	mov.b32 	%r2898, {%rs24, %rs23};
	cvt.rn.f16.f32 	%rs25, %f2409;
	cvt.rn.f16.f32 	%rs26, %f2408;
	mov.b32 	%r2897, {%rs26, %rs25};
	cvt.rn.f16.f32 	%rs27, %f2407;
	cvt.rn.f16.f32 	%rs28, %f2406;
	mov.b32 	%r2896, {%rs28, %rs27};
	cvt.rn.f16.f32 	%rs29, %f2405;
	cvt.rn.f16.f32 	%rs30, %f2404;
	mov.b32 	%r2895, {%rs30, %rs29};
	cvt.rn.f16.f32 	%rs31, %f2403;
	cvt.rn.f16.f32 	%rs32, %f2402;
	mov.b32 	%r2894, {%rs32, %rs31};
	cvt.rn.f16.f32 	%rs33, %f2401;
	cvt.rn.f16.f32 	%rs34, %f2400;
	mov.b32 	%r2893, {%rs34, %rs33};
	cvt.rn.f16.f32 	%rs35, %f2399;
	cvt.rn.f16.f32 	%rs36, %f2398;
	mov.b32 	%r2892, {%rs36, %rs35};
	cvt.rn.f16.f32 	%rs37, %f2397;
	cvt.rn.f16.f32 	%rs38, %f2396;
	mov.b32 	%r2891, {%rs38, %rs37};
	cvt.rn.f16.f32 	%rs39, %f2395;
	cvt.rn.f16.f32 	%rs40, %f2394;
	mov.b32 	%r2890, {%rs40, %rs39};
	cvt.rn.f16.f32 	%rs41, %f2393;
	cvt.rn.f16.f32 	%rs42, %f2392;
	mov.b32 	%r2889, {%rs42, %rs41};
	cvt.rn.f16.f32 	%rs43, %f2391;
	cvt.rn.f16.f32 	%rs44, %f2390;
	mov.b32 	%r2888, {%rs44, %rs43};
	cvt.rn.f16.f32 	%rs45, %f2389;
	cvt.rn.f16.f32 	%rs46, %f2388;
	mov.b32 	%r2887, {%rs46, %rs45};
	cvt.rn.f16.f32 	%rs47, %f2387;
	cvt.rn.f16.f32 	%rs48, %f2386;
	mov.b32 	%r2886, {%rs48, %rs47};
	cvt.rn.f16.f32 	%rs49, %f2385;
	cvt.rn.f16.f32 	%rs50, %f2384;
	mov.b32 	%r2885, {%rs50, %rs49};
	cvt.rn.f16.f32 	%rs51, %f2383;
	cvt.rn.f16.f32 	%rs52, %f2382;
	mov.b32 	%r2884, {%rs52, %rs51};
	cvt.rn.f16.f32 	%rs53, %f2381;
	cvt.rn.f16.f32 	%rs54, %f2380;
	mov.b32 	%r2883, {%rs54, %rs53};
	cvt.rn.f16.f32 	%rs55, %f2379;
	cvt.rn.f16.f32 	%rs56, %f2378;
	mov.b32 	%r2882, {%rs56, %rs55};
	cvt.rn.f16.f32 	%rs57, %f2377;
	cvt.rn.f16.f32 	%rs58, %f2376;
	mov.b32 	%r2881, {%rs58, %rs57};
	cvt.rn.f16.f32 	%rs59, %f2375;
	cvt.rn.f16.f32 	%rs60, %f2374;
	mov.b32 	%r2880, {%rs60, %rs59};
	cvt.rn.f16.f32 	%rs61, %f2373;
	cvt.rn.f16.f32 	%rs62, %f2372;
	mov.b32 	%r2879, {%rs62, %rs61};
	cvt.rn.f16.f32 	%rs63, %f2371;
	cvt.rn.f16.f32 	%rs64, %f2370;
	mov.b32 	%r2878, {%rs64, %rs63};
	cvt.rn.f16.f32 	%rs65, %f2369;
	cvt.rn.f16.f32 	%rs66, %f2368;
	mov.b32 	%r2877, {%rs66, %rs65};
	cvt.rn.f16.f32 	%rs67, %f2367;
	cvt.rn.f16.f32 	%rs68, %f2366;
	mov.b32 	%r2876, {%rs68, %rs67};
	cvt.rn.f16.f32 	%rs69, %f2365;
	cvt.rn.f16.f32 	%rs70, %f2364;
	mov.b32 	%r2875, {%rs70, %rs69};
	cvt.rn.f16.f32 	%rs71, %f2363;
	cvt.rn.f16.f32 	%rs72, %f2362;
	mov.b32 	%r2874, {%rs72, %rs71};
	cvt.rn.f16.f32 	%rs73, %f2361;
	cvt.rn.f16.f32 	%rs74, %f2360;
	mov.b32 	%r2873, {%rs74, %rs73};
	cvt.rn.f16.f32 	%rs75, %f2359;
	cvt.rn.f16.f32 	%rs76, %f2358;
	mov.b32 	%r2872, {%rs76, %rs75};
	cvt.rn.f16.f32 	%rs77, %f2357;
	cvt.rn.f16.f32 	%rs78, %f2356;
	mov.b32 	%r2871, {%rs78, %rs77};
	cvt.rn.f16.f32 	%rs79, %f2355;
	cvt.rn.f16.f32 	%rs80, %f2354;
	mov.b32 	%r2870, {%rs80, %rs79};
	cvt.rn.f16.f32 	%rs81, %f2353;
	cvt.rn.f16.f32 	%rs82, %f2352;
	mov.b32 	%r2869, {%rs82, %rs81};
	cvt.rn.f16.f32 	%rs83, %f2351;
	cvt.rn.f16.f32 	%rs84, %f2350;
	mov.b32 	%r2868, {%rs84, %rs83};
	cvt.rn.f16.f32 	%rs85, %f2349;
	cvt.rn.f16.f32 	%rs86, %f2348;
	mov.b32 	%r2867, {%rs86, %rs85};
	cvt.rn.f16.f32 	%rs87, %f2347;
	cvt.rn.f16.f32 	%rs88, %f2346;
	mov.b32 	%r2866, {%rs88, %rs87};
	cvt.rn.f16.f32 	%rs89, %f2345;
	cvt.rn.f16.f32 	%rs90, %f2344;
	mov.b32 	%r2865, {%rs90, %rs89};
	cvt.rn.f16.f32 	%rs91, %f2343;
	cvt.rn.f16.f32 	%rs92, %f2342;
	mov.b32 	%r2864, {%rs92, %rs91};
	cvt.rn.f16.f32 	%rs93, %f2341;
	cvt.rn.f16.f32 	%rs94, %f2340;
	mov.b32 	%r2863, {%rs94, %rs93};
	cvt.rn.f16.f32 	%rs95, %f2339;
	cvt.rn.f16.f32 	%rs96, %f2338;
	mov.b32 	%r2862, {%rs96, %rs95};
	cvt.rn.f16.f32 	%rs97, %f2337;
	cvt.rn.f16.f32 	%rs98, %f2336;
	mov.b32 	%r2861, {%rs98, %rs97};
	cvt.rn.f16.f32 	%rs99, %f2335;
	cvt.rn.f16.f32 	%rs100, %f2334;
	mov.b32 	%r2860, {%rs100, %rs99};
	cvt.rn.f16.f32 	%rs101, %f2333;
	cvt.rn.f16.f32 	%rs102, %f2332;
	mov.b32 	%r2859, {%rs102, %rs101};
	cvt.rn.f16.f32 	%rs103, %f2331;
	cvt.rn.f16.f32 	%rs104, %f2330;
	mov.b32 	%r2858, {%rs104, %rs103};
	cvt.rn.f16.f32 	%rs105, %f2329;
	cvt.rn.f16.f32 	%rs106, %f2328;
	mov.b32 	%r2857, {%rs106, %rs105};
	cvt.rn.f16.f32 	%rs107, %f2327;
	cvt.rn.f16.f32 	%rs108, %f2326;
	mov.b32 	%r2856, {%rs108, %rs107};
	cvt.rn.f16.f32 	%rs109, %f2325;
	cvt.rn.f16.f32 	%rs110, %f2324;
	mov.b32 	%r2855, {%rs110, %rs109};
	cvt.rn.f16.f32 	%rs111, %f2323;
	cvt.rn.f16.f32 	%rs112, %f2322;
	mov.b32 	%r2854, {%rs112, %rs111};
	cvt.rn.f16.f32 	%rs113, %f2321;
	cvt.rn.f16.f32 	%rs114, %f2320;
	mov.b32 	%r2853, {%rs114, %rs113};
	cvt.rn.f16.f32 	%rs115, %f2319;
	cvt.rn.f16.f32 	%rs116, %f2318;
	mov.b32 	%r2852, {%rs116, %rs115};
	cvt.rn.f16.f32 	%rs117, %f2317;
	cvt.rn.f16.f32 	%rs118, %f2316;
	mov.b32 	%r2851, {%rs118, %rs117};
	cvt.rn.f16.f32 	%rs119, %f2315;
	cvt.rn.f16.f32 	%rs120, %f2314;
	mov.b32 	%r2850, {%rs120, %rs119};
	cvt.rn.f16.f32 	%rs121, %f2313;
	cvt.rn.f16.f32 	%rs122, %f2312;
	mov.b32 	%r2849, {%rs122, %rs121};
	cvt.rn.f16.f32 	%rs123, %f2311;
	cvt.rn.f16.f32 	%rs124, %f2310;
	mov.b32 	%r2848, {%rs124, %rs123};
	cvt.rn.f16.f32 	%rs125, %f2309;
	cvt.rn.f16.f32 	%rs126, %f2308;
	mov.b32 	%r2847, {%rs126, %rs125};
	cvt.rn.f16.f32 	%rs127, %f2307;
	cvt.rn.f16.f32 	%rs128, %f2306;
	mov.b32 	%r2846, {%rs128, %rs127};
$L__BB0_4:
	.loc	1 313 38
	or.b32  	%r2762, %r1, %r19;
	or.b32  	%r2763, %r1, %r18;
	or.b32  	%r2764, %r1, %r17;
	or.b32  	%r2765, %r1, %r16;
	or.b32  	%r2766, %r1, %r15;
	or.b32  	%r2767, %r1, %r14;
	or.b32  	%r2768, %r1, %r13;
	or.b32  	%r2769, %r1, %r12;
	or.b32  	%r2770, %r1, %r11;
	or.b32  	%r2771, %r1, %r10;
	or.b32  	%r2772, %r1, %r9;
	or.b32  	%r2773, %r1, %r8;
	or.b32  	%r2774, %r1, %r7;
	or.b32  	%r2775, %r1, %r6;
	or.b32  	%r2776, %r1, %r5;
	or.b32  	%r2777, %r1, %r4;
	.loc	1 327 22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 347 33
	mul.lo.s32 	%r2778, %r2777, %r307;
	mul.lo.s32 	%r2779, %r2776, %r307;
	mul.lo.s32 	%r2780, %r2775, %r307;
	mul.lo.s32 	%r2781, %r2774, %r307;
	mul.lo.s32 	%r2782, %r2773, %r307;
	mul.lo.s32 	%r2783, %r2772, %r307;
	mul.lo.s32 	%r2784, %r2771, %r307;
	mul.lo.s32 	%r2785, %r2770, %r307;
	mul.lo.s32 	%r2786, %r2769, %r307;
	mul.lo.s32 	%r2787, %r2768, %r307;
	mul.lo.s32 	%r2788, %r2767, %r307;
	mul.lo.s32 	%r2789, %r2766, %r307;
	mul.lo.s32 	%r2790, %r2765, %r307;
	mul.lo.s32 	%r2791, %r2764, %r307;
	mul.lo.s32 	%r2792, %r2763, %r307;
	mul.lo.s32 	%r2793, %r2762, %r307;
	.loc	1 347 21
	mul.wide.s32 	%rd175, %r2778, 2;
	add.s64 	%rd176, %rd52, %rd175;
	mul.wide.s32 	%rd177, %r2779, 2;
	add.s64 	%rd178, %rd52, %rd177;
	mul.wide.s32 	%rd179, %r2780, 2;
	add.s64 	%rd180, %rd52, %rd179;
	mul.wide.s32 	%rd181, %r2781, 2;
	add.s64 	%rd182, %rd52, %rd181;
	mul.wide.s32 	%rd183, %r2782, 2;
	add.s64 	%rd184, %rd52, %rd183;
	mul.wide.s32 	%rd185, %r2783, 2;
	add.s64 	%rd186, %rd52, %rd185;
	mul.wide.s32 	%rd187, %r2784, 2;
	add.s64 	%rd188, %rd52, %rd187;
	mul.wide.s32 	%rd189, %r2785, 2;
	add.s64 	%rd190, %rd52, %rd189;
	mul.wide.s32 	%rd191, %r2786, 2;
	add.s64 	%rd192, %rd52, %rd191;
	mul.wide.s32 	%rd193, %r2787, 2;
	add.s64 	%rd194, %rd52, %rd193;
	mul.wide.s32 	%rd195, %r2788, 2;
	add.s64 	%rd196, %rd52, %rd195;
	mul.wide.s32 	%rd197, %r2789, 2;
	add.s64 	%rd198, %rd52, %rd197;
	mul.wide.s32 	%rd199, %r2790, 2;
	add.s64 	%rd200, %rd52, %rd199;
	mul.wide.s32 	%rd201, %r2791, 2;
	add.s64 	%rd202, %rd52, %rd201;
	mul.wide.s32 	%rd203, %r2792, 2;
	add.s64 	%rd204, %rd52, %rd203;
	mul.wide.s32 	%rd205, %r2793, 2;
	add.s64 	%rd206, %rd52, %rd205;
	.loc	1 347 52
	mul.wide.s32 	%rd207, %r21, 2;
	add.s64 	%rd159, %rd176, %rd207;
	add.s64 	%rd160, %rd178, %rd207;
	add.s64 	%rd161, %rd180, %rd207;
	add.s64 	%rd162, %rd182, %rd207;
	add.s64 	%rd163, %rd184, %rd207;
	add.s64 	%rd164, %rd186, %rd207;
	add.s64 	%rd165, %rd188, %rd207;
	add.s64 	%rd166, %rd190, %rd207;
	add.s64 	%rd167, %rd192, %rd207;
	add.s64 	%rd168, %rd194, %rd207;
	add.s64 	%rd169, %rd196, %rd207;
	add.s64 	%rd170, %rd198, %rd207;
	add.s64 	%rd171, %rd200, %rd207;
	add.s64 	%rd172, %rd202, %rd207;
	add.s64 	%rd173, %rd204, %rd207;
	add.s64 	%rd174, %rd206, %rd207;
	.loc	1 348 33
	setp.lt.s32 	%p147, %r2777, %r303;
	setp.lt.s32 	%p148, %r2776, %r303;
	setp.lt.s32 	%p149, %r2775, %r303;
	setp.lt.s32 	%p150, %r2774, %r303;
	setp.lt.s32 	%p151, %r2773, %r303;
	setp.lt.s32 	%p152, %r2772, %r303;
	setp.lt.s32 	%p153, %r2771, %r303;
	setp.lt.s32 	%p154, %r2770, %r303;
	setp.lt.s32 	%p155, %r2769, %r303;
	setp.lt.s32 	%p156, %r2768, %r303;
	setp.lt.s32 	%p157, %r2767, %r303;
	setp.lt.s32 	%p158, %r2766, %r303;
	setp.lt.s32 	%p159, %r2765, %r303;
	setp.lt.s32 	%p160, %r2764, %r303;
	setp.lt.s32 	%p161, %r2763, %r303;
	setp.lt.s32 	%p162, %r2762, %r303;
	.loc	1 348 58
	setp.lt.s32 	%p163, %r21, %r304;
	.loc	1 348 39
	and.pred  	%p131, %p147, %p163;
	and.pred  	%p132, %p148, %p163;
	and.pred  	%p133, %p149, %p163;
	and.pred  	%p134, %p150, %p163;
	and.pred  	%p135, %p151, %p163;
	and.pred  	%p136, %p152, %p163;
	and.pred  	%p137, %p153, %p163;
	and.pred  	%p138, %p154, %p163;
	and.pred  	%p139, %p155, %p163;
	and.pred  	%p140, %p156, %p163;
	and.pred  	%p141, %p157, %p163;
	and.pred  	%p142, %p158, %p163;
	and.pred  	%p143, %p159, %p163;
	and.pred  	%p144, %p160, %p163;
	and.pred  	%p145, %p161, %p163;
	and.pred  	%p146, %p162, %p163;
	.loc	1 349 21
	shr.u32 	%r2794, %r3, 2;
	shl.b32 	%r2795, %r2, 1;
	and.b32  	%r2796, %r2795, 6;
	or.b32  	%r2797, %r2794, %r50;
	shl.b32 	%r2798, %r69, 3;
	or.b32  	%r2799, %r2798, %r2796;
	mad.lo.s32 	%r2800, %r2797, 264, %r2799;
	shl.b32 	%r2801, %r2800, 1;
	add.s32 	%r2803, %r595, %r2801;
	st.shared.b32 	[%r2803], %r2846;
	st.shared.b32 	[%r2803+4224], %r2847;
	st.shared.b32 	[%r2803+64], %r2848;
	st.shared.b32 	[%r2803+4288], %r2849;
	st.shared.b32 	[%r2803+128], %r2850;
	st.shared.b32 	[%r2803+4352], %r2851;
	st.shared.b32 	[%r2803+192], %r2852;
	st.shared.b32 	[%r2803+4416], %r2853;
	st.shared.b32 	[%r2803+256], %r2854;
	st.shared.b32 	[%r2803+4480], %r2855;
	st.shared.b32 	[%r2803+320], %r2856;
	st.shared.b32 	[%r2803+4544], %r2857;
	st.shared.b32 	[%r2803+384], %r2858;
	st.shared.b32 	[%r2803+4608], %r2859;
	st.shared.b32 	[%r2803+448], %r2860;
	st.shared.b32 	[%r2803+4672], %r2861;
	bar.sync 	0;
	shl.b32 	%r2804, %r3, 3;
	mad.lo.s32 	%r2805, %r4, 264, %r2804;
	shl.b32 	%r2806, %r2805, 1;
	add.s32 	%r2807, %r595, %r2806;
	ld.shared.v4.u32 	{%r2698, %r2699, %r2700, %r2701}, [%r2807];
	ld.shared.v4.u32 	{%r2702, %r2703, %r2704, %r2705}, [%r2807+4224];
	ld.shared.v4.u32 	{%r2706, %r2707, %r2708, %r2709}, [%r2807+8448];
	ld.shared.v4.u32 	{%r2710, %r2711, %r2712, %r2713}, [%r2807+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2803], %r2862;
	st.shared.b32 	[%r2803+4224], %r2863;
	st.shared.b32 	[%r2803+64], %r2864;
	st.shared.b32 	[%r2803+4288], %r2865;
	st.shared.b32 	[%r2803+128], %r2866;
	st.shared.b32 	[%r2803+4352], %r2867;
	st.shared.b32 	[%r2803+192], %r2868;
	st.shared.b32 	[%r2803+4416], %r2869;
	st.shared.b32 	[%r2803+256], %r2870;
	st.shared.b32 	[%r2803+4480], %r2871;
	st.shared.b32 	[%r2803+320], %r2872;
	st.shared.b32 	[%r2803+4544], %r2873;
	st.shared.b32 	[%r2803+384], %r2874;
	st.shared.b32 	[%r2803+4608], %r2875;
	st.shared.b32 	[%r2803+448], %r2876;
	st.shared.b32 	[%r2803+4672], %r2877;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2714, %r2715, %r2716, %r2717}, [%r2807];
	ld.shared.v4.u32 	{%r2718, %r2719, %r2720, %r2721}, [%r2807+4224];
	ld.shared.v4.u32 	{%r2722, %r2723, %r2724, %r2725}, [%r2807+8448];
	ld.shared.v4.u32 	{%r2726, %r2727, %r2728, %r2729}, [%r2807+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2803], %r2878;
	st.shared.b32 	[%r2803+4224], %r2879;
	st.shared.b32 	[%r2803+64], %r2880;
	st.shared.b32 	[%r2803+4288], %r2881;
	st.shared.b32 	[%r2803+128], %r2882;
	st.shared.b32 	[%r2803+4352], %r2883;
	st.shared.b32 	[%r2803+192], %r2884;
	st.shared.b32 	[%r2803+4416], %r2885;
	st.shared.b32 	[%r2803+256], %r2886;
	st.shared.b32 	[%r2803+4480], %r2887;
	st.shared.b32 	[%r2803+320], %r2888;
	st.shared.b32 	[%r2803+4544], %r2889;
	st.shared.b32 	[%r2803+384], %r2890;
	st.shared.b32 	[%r2803+4608], %r2891;
	st.shared.b32 	[%r2803+448], %r2892;
	st.shared.b32 	[%r2803+4672], %r2893;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2730, %r2731, %r2732, %r2733}, [%r2807];
	ld.shared.v4.u32 	{%r2734, %r2735, %r2736, %r2737}, [%r2807+4224];
	ld.shared.v4.u32 	{%r2738, %r2739, %r2740, %r2741}, [%r2807+8448];
	ld.shared.v4.u32 	{%r2742, %r2743, %r2744, %r2745}, [%r2807+12672];
	bar.sync 	0;
	st.shared.b32 	[%r2803], %r2894;
	st.shared.b32 	[%r2803+4224], %r2895;
	st.shared.b32 	[%r2803+64], %r2896;
	st.shared.b32 	[%r2803+4288], %r2897;
	st.shared.b32 	[%r2803+128], %r2898;
	st.shared.b32 	[%r2803+4352], %r2899;
	st.shared.b32 	[%r2803+192], %r2900;
	st.shared.b32 	[%r2803+4416], %r2901;
	st.shared.b32 	[%r2803+256], %r2902;
	st.shared.b32 	[%r2803+4480], %r2903;
	st.shared.b32 	[%r2803+320], %r2904;
	st.shared.b32 	[%r2803+4544], %r2905;
	st.shared.b32 	[%r2803+384], %r2906;
	st.shared.b32 	[%r2803+4608], %r2907;
	st.shared.b32 	[%r2803+448], %r2908;
	st.shared.b32 	[%r2803+4672], %r2909;
	bar.sync 	0;
	ld.shared.v4.u32 	{%r2746, %r2747, %r2748, %r2749}, [%r2807];
	ld.shared.v4.u32 	{%r2750, %r2751, %r2752, %r2753}, [%r2807+4224];
	ld.shared.v4.u32 	{%r2754, %r2755, %r2756, %r2757}, [%r2807+8448];
	ld.shared.v4.u32 	{%r2758, %r2759, %r2760, %r2761}, [%r2807+12672];
	// begin inline asm
	@%p131 st.global.v4.b32 [ %rd159 + 0 ], { %r2698, %r2699, %r2700, %r2701 };
	// end inline asm
	// begin inline asm
	@%p132 st.global.v4.b32 [ %rd160 + 0 ], { %r2702, %r2703, %r2704, %r2705 };
	// end inline asm
	// begin inline asm
	@%p133 st.global.v4.b32 [ %rd161 + 0 ], { %r2706, %r2707, %r2708, %r2709 };
	// end inline asm
	// begin inline asm
	@%p134 st.global.v4.b32 [ %rd162 + 0 ], { %r2710, %r2711, %r2712, %r2713 };
	// end inline asm
	// begin inline asm
	@%p135 st.global.v4.b32 [ %rd163 + 0 ], { %r2714, %r2715, %r2716, %r2717 };
	// end inline asm
	// begin inline asm
	@%p136 st.global.v4.b32 [ %rd164 + 0 ], { %r2718, %r2719, %r2720, %r2721 };
	// end inline asm
	// begin inline asm
	@%p137 st.global.v4.b32 [ %rd165 + 0 ], { %r2722, %r2723, %r2724, %r2725 };
	// end inline asm
	// begin inline asm
	@%p138 st.global.v4.b32 [ %rd166 + 0 ], { %r2726, %r2727, %r2728, %r2729 };
	// end inline asm
	// begin inline asm
	@%p139 st.global.v4.b32 [ %rd167 + 0 ], { %r2730, %r2731, %r2732, %r2733 };
	// end inline asm
	// begin inline asm
	@%p140 st.global.v4.b32 [ %rd168 + 0 ], { %r2734, %r2735, %r2736, %r2737 };
	// end inline asm
	// begin inline asm
	@%p141 st.global.v4.b32 [ %rd169 + 0 ], { %r2738, %r2739, %r2740, %r2741 };
	// end inline asm
	// begin inline asm
	@%p142 st.global.v4.b32 [ %rd170 + 0 ], { %r2742, %r2743, %r2744, %r2745 };
	// end inline asm
	// begin inline asm
	@%p143 st.global.v4.b32 [ %rd171 + 0 ], { %r2746, %r2747, %r2748, %r2749 };
	// end inline asm
	// begin inline asm
	@%p144 st.global.v4.b32 [ %rd172 + 0 ], { %r2750, %r2751, %r2752, %r2753 };
	// end inline asm
	// begin inline asm
	@%p145 st.global.v4.b32 [ %rd173 + 0 ], { %r2754, %r2755, %r2756, %r2757 };
	// end inline asm
	// begin inline asm
	@%p146 st.global.v4.b32 [ %rd174 + 0 ], { %r2758, %r2759, %r2760, %r2761 };
	// end inline asm
	.loc	1 349 4
	ret;
$L__tmp6:
$L__func_end0:

}
	.file	1 "/data_ssd1/zjy_home/my_code/MLC-Learning/Triton/triton-examples/02.matrix-multiplication/matrix_multiplication.py"
	.file	2 "/data_ssd1/zjy_home/frameworks/cuda/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 5
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 265
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 109
.b8 97
.b8 116
.b8 114
.b8 105
.b8 120
.b8 95
.b8 109
.b8 117
.b8 108
.b8 116
.b8 105
.b8 112
.b8 108
.b8 105
.b8 99
.b8 97
.b8 116
.b8 105
.b8 111
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 100
.b8 97
.b8 116
.b8 97
.b8 95
.b8 115
.b8 115
.b8 100
.b8 49
.b8 47
.b8 122
.b8 106
.b8 121
.b8 95
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 121
.b8 95
.b8 99
.b8 111
.b8 100
.b8 101
.b8 47
.b8 77
.b8 76
.b8 67
.b8 45
.b8 76
.b8 101
.b8 97
.b8 114
.b8 110
.b8 105
.b8 110
.b8 103
.b8 47
.b8 84
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 45
.b8 101
.b8 120
.b8 97
.b8 109
.b8 112
.b8 108
.b8 101
.b8 115
.b8 47
.b8 48
.b8 50
.b8 46
.b8 109
.b8 97
.b8 116
.b8 114
.b8 105
.b8 120
.b8 45
.b8 109
.b8 117
.b8 108
.b8 116
.b8 105
.b8 112
.b8 108
.b8 105
.b8 99
.b8 97
.b8 116
.b8 105
.b8 111
.b8 110
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 109
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 155
.b8 4
.b32 155
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 37
.b8 1
.b8 27
.b8 4
.b32 155
.b64 $L__tmp2
.b64 $L__tmp3
.b8 1
.b8 38
.b8 1
.b8 27
.b8 4
.b32 155
.b64 $L__tmp4
.b64 $L__tmp5
.b8 1
.b8 71
.b8 1
.b8 33
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
